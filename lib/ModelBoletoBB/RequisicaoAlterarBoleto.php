<?php
/**
 * RequisicaoAlterarBoleto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cobranças API
 *
 * API para gerenciar os serviços de cobranças de cliente do Banco do Brasil S.A.
 *
 * OpenAPI spec version: 2.17.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.57
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\ModelBoletoBB;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * RequisicaoAlterarBoleto Class Doc Comment
 *
 * @category Class
 * @description Representação dos campos de requisição de uma solicitação de alteração dos dados de boletos bancários.
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RequisicaoAlterarBoleto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RequisicaoAlterarBoleto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'numero_convenio' => 'int',
        'indicador_nova_data_vencimento' => 'string',
        'alteracao_data' => '\Swagger\Client\ModelBoletoBB\AlteracaoData',
        'indicador_novo_valor_nominal' => 'string',
        'alteracao_valor' => '\Swagger\Client\ModelBoletoBB\AlterarValorNominal',
        'indicador_atribuir_desconto' => 'string',
        'desconto' => '\Swagger\Client\ModelBoletoBB\Desconto',
        'indicador_alterar_desconto' => 'string',
        'alteracao_desconto' => '\Swagger\Client\ModelBoletoBB\AlteracaoDesconto',
        'indicador_alterar_data_desconto' => 'string',
        'alteracao_data_desconto' => '\Swagger\Client\ModelBoletoBB\AlteracaoDataDesconto',
        'indicador_protestar' => 'string',
        'protesto' => '\Swagger\Client\ModelBoletoBB\Protesto',
        'indicador_sustacao_protesto' => 'string',
        'indicador_cancelar_protesto' => 'string',
        'indicador_incluir_abatimento' => 'string',
        'abatimento' => '\Swagger\Client\ModelBoletoBB\Abatimento',
        'indicador_alterar_abatimento' => 'string',
        'alteracao_abatimento' => '\Swagger\Client\ModelBoletoBB\AlteracaoAbatimento',
        'indicador_cobrar_juros' => 'string',
        'juros' => '\Swagger\Client\ModelBoletoBB\Juros',
        'indicador_dispensar_juros' => 'string',
        'indicador_cobrar_multa' => 'string',
        'multa' => '\Swagger\Client\ModelBoletoBB\Multa',
        'indicador_dispensar_multa' => 'string',
        'indicador_negativar' => 'string',
        'negativacao' => '\Swagger\Client\ModelBoletoBB\Negativacao',
        'indicador_alterar_seu_numero' => 'string',
        'alteracao_seu_numero' => '\Swagger\Client\ModelBoletoBB\AlteracaoSeuNumero',
        'indicador_alterar_endereco_pagador' => 'string',
        'alteracao_endereco' => '\Swagger\Client\ModelBoletoBB\AlteracaoEndereco',
        'indicador_alterar_prazo_boleto_vencido' => 'string',
        'alteracao_prazo' => '\Swagger\Client\ModelBoletoBB\AlteracaoPrazo'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'numero_convenio' => 'int32',
        'indicador_nova_data_vencimento' => null,
        'alteracao_data' => null,
        'indicador_novo_valor_nominal' => null,
        'alteracao_valor' => null,
        'indicador_atribuir_desconto' => null,
        'desconto' => null,
        'indicador_alterar_desconto' => null,
        'alteracao_desconto' => null,
        'indicador_alterar_data_desconto' => null,
        'alteracao_data_desconto' => null,
        'indicador_protestar' => null,
        'protesto' => null,
        'indicador_sustacao_protesto' => null,
        'indicador_cancelar_protesto' => null,
        'indicador_incluir_abatimento' => null,
        'abatimento' => null,
        'indicador_alterar_abatimento' => null,
        'alteracao_abatimento' => null,
        'indicador_cobrar_juros' => null,
        'juros' => null,
        'indicador_dispensar_juros' => null,
        'indicador_cobrar_multa' => null,
        'multa' => null,
        'indicador_dispensar_multa' => null,
        'indicador_negativar' => null,
        'negativacao' => null,
        'indicador_alterar_seu_numero' => null,
        'alteracao_seu_numero' => null,
        'indicador_alterar_endereco_pagador' => null,
        'alteracao_endereco' => null,
        'indicador_alterar_prazo_boleto_vencido' => null,
        'alteracao_prazo' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'numero_convenio' => 'numeroConvenio',
        'indicador_nova_data_vencimento' => 'indicadorNovaDataVencimento',
        'alteracao_data' => 'alteracaoData',
        'indicador_novo_valor_nominal' => 'indicadorNovoValorNominal',
        'alteracao_valor' => 'alteracaoValor',
        'indicador_atribuir_desconto' => 'indicadorAtribuirDesconto',
        'desconto' => 'desconto',
        'indicador_alterar_desconto' => 'indicadorAlterarDesconto',
        'alteracao_desconto' => 'alteracaoDesconto',
        'indicador_alterar_data_desconto' => 'indicadorAlterarDataDesconto',
        'alteracao_data_desconto' => 'alteracaoDataDesconto',
        'indicador_protestar' => 'indicadorProtestar',
        'protesto' => 'protesto',
        'indicador_sustacao_protesto' => 'indicadorSustacaoProtesto',
        'indicador_cancelar_protesto' => 'indicadorCancelarProtesto',
        'indicador_incluir_abatimento' => 'indicadorIncluirAbatimento',
        'abatimento' => 'abatimento',
        'indicador_alterar_abatimento' => 'indicadorAlterarAbatimento',
        'alteracao_abatimento' => 'alteracaoAbatimento',
        'indicador_cobrar_juros' => 'indicadorCobrarJuros',
        'juros' => 'juros',
        'indicador_dispensar_juros' => 'indicadorDispensarJuros',
        'indicador_cobrar_multa' => 'indicadorCobrarMulta',
        'multa' => 'multa',
        'indicador_dispensar_multa' => 'indicadorDispensarMulta',
        'indicador_negativar' => 'indicadorNegativar',
        'negativacao' => 'negativacao',
        'indicador_alterar_seu_numero' => 'indicadorAlterarSeuNumero',
        'alteracao_seu_numero' => 'alteracaoSeuNumero',
        'indicador_alterar_endereco_pagador' => 'indicadorAlterarEnderecoPagador',
        'alteracao_endereco' => 'alteracaoEndereco',
        'indicador_alterar_prazo_boleto_vencido' => 'indicadorAlterarPrazoBoletoVencido',
        'alteracao_prazo' => 'alteracaoPrazo'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'numero_convenio' => 'setNumeroConvenio',
        'indicador_nova_data_vencimento' => 'setIndicadorNovaDataVencimento',
        'alteracao_data' => 'setAlteracaoData',
        'indicador_novo_valor_nominal' => 'setIndicadorNovoValorNominal',
        'alteracao_valor' => 'setAlteracaoValor',
        'indicador_atribuir_desconto' => 'setIndicadorAtribuirDesconto',
        'desconto' => 'setDesconto',
        'indicador_alterar_desconto' => 'setIndicadorAlterarDesconto',
        'alteracao_desconto' => 'setAlteracaoDesconto',
        'indicador_alterar_data_desconto' => 'setIndicadorAlterarDataDesconto',
        'alteracao_data_desconto' => 'setAlteracaoDataDesconto',
        'indicador_protestar' => 'setIndicadorProtestar',
        'protesto' => 'setProtesto',
        'indicador_sustacao_protesto' => 'setIndicadorSustacaoProtesto',
        'indicador_cancelar_protesto' => 'setIndicadorCancelarProtesto',
        'indicador_incluir_abatimento' => 'setIndicadorIncluirAbatimento',
        'abatimento' => 'setAbatimento',
        'indicador_alterar_abatimento' => 'setIndicadorAlterarAbatimento',
        'alteracao_abatimento' => 'setAlteracaoAbatimento',
        'indicador_cobrar_juros' => 'setIndicadorCobrarJuros',
        'juros' => 'setJuros',
        'indicador_dispensar_juros' => 'setIndicadorDispensarJuros',
        'indicador_cobrar_multa' => 'setIndicadorCobrarMulta',
        'multa' => 'setMulta',
        'indicador_dispensar_multa' => 'setIndicadorDispensarMulta',
        'indicador_negativar' => 'setIndicadorNegativar',
        'negativacao' => 'setNegativacao',
        'indicador_alterar_seu_numero' => 'setIndicadorAlterarSeuNumero',
        'alteracao_seu_numero' => 'setAlteracaoSeuNumero',
        'indicador_alterar_endereco_pagador' => 'setIndicadorAlterarEnderecoPagador',
        'alteracao_endereco' => 'setAlteracaoEndereco',
        'indicador_alterar_prazo_boleto_vencido' => 'setIndicadorAlterarPrazoBoletoVencido',
        'alteracao_prazo' => 'setAlteracaoPrazo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'numero_convenio' => 'getNumeroConvenio',
        'indicador_nova_data_vencimento' => 'getIndicadorNovaDataVencimento',
        'alteracao_data' => 'getAlteracaoData',
        'indicador_novo_valor_nominal' => 'getIndicadorNovoValorNominal',
        'alteracao_valor' => 'getAlteracaoValor',
        'indicador_atribuir_desconto' => 'getIndicadorAtribuirDesconto',
        'desconto' => 'getDesconto',
        'indicador_alterar_desconto' => 'getIndicadorAlterarDesconto',
        'alteracao_desconto' => 'getAlteracaoDesconto',
        'indicador_alterar_data_desconto' => 'getIndicadorAlterarDataDesconto',
        'alteracao_data_desconto' => 'getAlteracaoDataDesconto',
        'indicador_protestar' => 'getIndicadorProtestar',
        'protesto' => 'getProtesto',
        'indicador_sustacao_protesto' => 'getIndicadorSustacaoProtesto',
        'indicador_cancelar_protesto' => 'getIndicadorCancelarProtesto',
        'indicador_incluir_abatimento' => 'getIndicadorIncluirAbatimento',
        'abatimento' => 'getAbatimento',
        'indicador_alterar_abatimento' => 'getIndicadorAlterarAbatimento',
        'alteracao_abatimento' => 'getAlteracaoAbatimento',
        'indicador_cobrar_juros' => 'getIndicadorCobrarJuros',
        'juros' => 'getJuros',
        'indicador_dispensar_juros' => 'getIndicadorDispensarJuros',
        'indicador_cobrar_multa' => 'getIndicadorCobrarMulta',
        'multa' => 'getMulta',
        'indicador_dispensar_multa' => 'getIndicadorDispensarMulta',
        'indicador_negativar' => 'getIndicadorNegativar',
        'negativacao' => 'getNegativacao',
        'indicador_alterar_seu_numero' => 'getIndicadorAlterarSeuNumero',
        'alteracao_seu_numero' => 'getAlteracaoSeuNumero',
        'indicador_alterar_endereco_pagador' => 'getIndicadorAlterarEnderecoPagador',
        'alteracao_endereco' => 'getAlteracaoEndereco',
        'indicador_alterar_prazo_boleto_vencido' => 'getIndicadorAlterarPrazoBoletoVencido',
        'alteracao_prazo' => 'getAlteracaoPrazo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['numero_convenio'] = isset($data['numero_convenio']) ? $data['numero_convenio'] : null;
        $this->container['indicador_nova_data_vencimento'] = isset($data['indicador_nova_data_vencimento']) ? $data['indicador_nova_data_vencimento'] : null;
        $this->container['alteracao_data'] = isset($data['alteracao_data']) ? $data['alteracao_data'] : null;
        $this->container['indicador_novo_valor_nominal'] = isset($data['indicador_novo_valor_nominal']) ? $data['indicador_novo_valor_nominal'] : null;
        $this->container['alteracao_valor'] = isset($data['alteracao_valor']) ? $data['alteracao_valor'] : null;
        $this->container['indicador_atribuir_desconto'] = isset($data['indicador_atribuir_desconto']) ? $data['indicador_atribuir_desconto'] : null;
        $this->container['desconto'] = isset($data['desconto']) ? $data['desconto'] : null;
        $this->container['indicador_alterar_desconto'] = isset($data['indicador_alterar_desconto']) ? $data['indicador_alterar_desconto'] : null;
        $this->container['alteracao_desconto'] = isset($data['alteracao_desconto']) ? $data['alteracao_desconto'] : null;
        $this->container['indicador_alterar_data_desconto'] = isset($data['indicador_alterar_data_desconto']) ? $data['indicador_alterar_data_desconto'] : null;
        $this->container['alteracao_data_desconto'] = isset($data['alteracao_data_desconto']) ? $data['alteracao_data_desconto'] : null;
        $this->container['indicador_protestar'] = isset($data['indicador_protestar']) ? $data['indicador_protestar'] : null;
        $this->container['protesto'] = isset($data['protesto']) ? $data['protesto'] : null;
        $this->container['indicador_sustacao_protesto'] = isset($data['indicador_sustacao_protesto']) ? $data['indicador_sustacao_protesto'] : null;
        $this->container['indicador_cancelar_protesto'] = isset($data['indicador_cancelar_protesto']) ? $data['indicador_cancelar_protesto'] : null;
        $this->container['indicador_incluir_abatimento'] = isset($data['indicador_incluir_abatimento']) ? $data['indicador_incluir_abatimento'] : null;
        $this->container['abatimento'] = isset($data['abatimento']) ? $data['abatimento'] : null;
        $this->container['indicador_alterar_abatimento'] = isset($data['indicador_alterar_abatimento']) ? $data['indicador_alterar_abatimento'] : null;
        $this->container['alteracao_abatimento'] = isset($data['alteracao_abatimento']) ? $data['alteracao_abatimento'] : null;
        $this->container['indicador_cobrar_juros'] = isset($data['indicador_cobrar_juros']) ? $data['indicador_cobrar_juros'] : null;
        $this->container['juros'] = isset($data['juros']) ? $data['juros'] : null;
        $this->container['indicador_dispensar_juros'] = isset($data['indicador_dispensar_juros']) ? $data['indicador_dispensar_juros'] : null;
        $this->container['indicador_cobrar_multa'] = isset($data['indicador_cobrar_multa']) ? $data['indicador_cobrar_multa'] : null;
        $this->container['multa'] = isset($data['multa']) ? $data['multa'] : null;
        $this->container['indicador_dispensar_multa'] = isset($data['indicador_dispensar_multa']) ? $data['indicador_dispensar_multa'] : null;
        $this->container['indicador_negativar'] = isset($data['indicador_negativar']) ? $data['indicador_negativar'] : null;
        $this->container['negativacao'] = isset($data['negativacao']) ? $data['negativacao'] : null;
        $this->container['indicador_alterar_seu_numero'] = isset($data['indicador_alterar_seu_numero']) ? $data['indicador_alterar_seu_numero'] : null;
        $this->container['alteracao_seu_numero'] = isset($data['alteracao_seu_numero']) ? $data['alteracao_seu_numero'] : null;
        $this->container['indicador_alterar_endereco_pagador'] = isset($data['indicador_alterar_endereco_pagador']) ? $data['indicador_alterar_endereco_pagador'] : null;
        $this->container['alteracao_endereco'] = isset($data['alteracao_endereco']) ? $data['alteracao_endereco'] : null;
        $this->container['indicador_alterar_prazo_boleto_vencido'] = isset($data['indicador_alterar_prazo_boleto_vencido']) ? $data['indicador_alterar_prazo_boleto_vencido'] : null;
        $this->container['alteracao_prazo'] = isset($data['alteracao_prazo']) ? $data['alteracao_prazo'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['indicador_nova_data_vencimento'] === null) {
            $invalidProperties[] = "'indicador_nova_data_vencimento' can't be null";
        }
        if ($this->container['indicador_novo_valor_nominal'] === null) {
            $invalidProperties[] = "'indicador_novo_valor_nominal' can't be null";
        }
        if ($this->container['indicador_atribuir_desconto'] === null) {
            $invalidProperties[] = "'indicador_atribuir_desconto' can't be null";
        }
        if ($this->container['indicador_alterar_desconto'] === null) {
            $invalidProperties[] = "'indicador_alterar_desconto' can't be null";
        }
        if ($this->container['indicador_alterar_data_desconto'] === null) {
            $invalidProperties[] = "'indicador_alterar_data_desconto' can't be null";
        }
        if ($this->container['indicador_protestar'] === null) {
            $invalidProperties[] = "'indicador_protestar' can't be null";
        }
        if ($this->container['indicador_sustacao_protesto'] === null) {
            $invalidProperties[] = "'indicador_sustacao_protesto' can't be null";
        }
        if ($this->container['indicador_cancelar_protesto'] === null) {
            $invalidProperties[] = "'indicador_cancelar_protesto' can't be null";
        }
        if ($this->container['indicador_incluir_abatimento'] === null) {
            $invalidProperties[] = "'indicador_incluir_abatimento' can't be null";
        }
        if ($this->container['indicador_alterar_abatimento'] === null) {
            $invalidProperties[] = "'indicador_alterar_abatimento' can't be null";
        }
        if ($this->container['indicador_cobrar_juros'] === null) {
            $invalidProperties[] = "'indicador_cobrar_juros' can't be null";
        }
        if ($this->container['indicador_dispensar_juros'] === null) {
            $invalidProperties[] = "'indicador_dispensar_juros' can't be null";
        }
        if ($this->container['indicador_cobrar_multa'] === null) {
            $invalidProperties[] = "'indicador_cobrar_multa' can't be null";
        }
        if ($this->container['indicador_dispensar_multa'] === null) {
            $invalidProperties[] = "'indicador_dispensar_multa' can't be null";
        }
        if ($this->container['indicador_negativar'] === null) {
            $invalidProperties[] = "'indicador_negativar' can't be null";
        }
        if ($this->container['indicador_alterar_seu_numero'] === null) {
            $invalidProperties[] = "'indicador_alterar_seu_numero' can't be null";
        }
        if ($this->container['indicador_alterar_endereco_pagador'] === null) {
            $invalidProperties[] = "'indicador_alterar_endereco_pagador' can't be null";
        }
        if ($this->container['indicador_alterar_prazo_boleto_vencido'] === null) {
            $invalidProperties[] = "'indicador_alterar_prazo_boleto_vencido' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets numero_convenio
     *
     * @return int
     */
    public function getNumeroConvenio()
    {
        return $this->container['numero_convenio'];
    }

    /**
     * Sets numero_convenio
     *
     * @param int $numero_convenio Identificador determinado pelo sistema de boleto bancário para fornecer a emissão e liquidação do boleto e, portanto, usado para creditar o Beneficiário.
     *
     * @return $this
     */
    public function setNumeroConvenio($numero_convenio)
    {
        $this->container['numero_convenio'] = $numero_convenio;

        return $this;
    }

    /**
     * Gets indicador_nova_data_vencimento
     *
     * @return string
     */
    public function getIndicadorNovaDataVencimento()
    {
        return $this->container['indicador_nova_data_vencimento'];
    }

    /**
     * Sets indicador_nova_data_vencimento
     *
     * @param string $indicador_nova_data_vencimento Indica a intenção de atribuir nova data de vencimento ao boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorNovaDataVencimento($indicador_nova_data_vencimento)
    {
        $this->container['indicador_nova_data_vencimento'] = $indicador_nova_data_vencimento;

        return $this;
    }

    /**
     * Gets alteracao_data
     *
     * @return \Swagger\Client\ModelBoletoBB\AlteracaoData
     */
    public function getAlteracaoData()
    {
        return $this->container['alteracao_data'];
    }

    /**
     * Sets alteracao_data
     *
     * @param \Swagger\Client\ModelBoletoBB\AlteracaoData $alteracao_data alteracao_data
     *
     * @return $this
     */
    public function setAlteracaoData($alteracao_data)
    {
        $this->container['alteracao_data'] = $alteracao_data;

        return $this;
    }

    /**
     * Gets indicador_novo_valor_nominal
     *
     * @return string
     */
    public function getIndicadorNovoValorNominal()
    {
        return $this->container['indicador_novo_valor_nominal'];
    }

    /**
     * Sets indicador_novo_valor_nominal
     *
     * @param string $indicador_novo_valor_nominal Indica a intenção de alterar valor nominal do boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorNovoValorNominal($indicador_novo_valor_nominal)
    {
        $this->container['indicador_novo_valor_nominal'] = $indicador_novo_valor_nominal;

        return $this;
    }

    /**
     * Gets alteracao_valor
     *
     * @return \Swagger\Client\ModelBoletoBB\AlterarValorNominal
     */
    public function getAlteracaoValor()
    {
        return $this->container['alteracao_valor'];
    }

    /**
     * Sets alteracao_valor
     *
     * @param \Swagger\Client\ModelBoletoBB\AlterarValorNominal $alteracao_valor alteracao_valor
     *
     * @return $this
     */
    public function setAlteracaoValor($alteracao_valor)
    {
        $this->container['alteracao_valor'] = $alteracao_valor;

        return $this;
    }

    /**
     * Gets indicador_atribuir_desconto
     *
     * @return string
     */
    public function getIndicadorAtribuirDesconto()
    {
        return $this->container['indicador_atribuir_desconto'];
    }

    /**
     * Sets indicador_atribuir_desconto
     *
     * @param string $indicador_atribuir_desconto Indica a intenção de atribuir desconto ao boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorAtribuirDesconto($indicador_atribuir_desconto)
    {
        $this->container['indicador_atribuir_desconto'] = $indicador_atribuir_desconto;

        return $this;
    }

    /**
     * Gets desconto
     *
     * @return \Swagger\Client\ModelBoletoBB\Desconto
     */
    public function getDesconto()
    {
        return $this->container['desconto'];
    }

    /**
     * Sets desconto
     *
     * @param \Swagger\Client\ModelBoletoBB\Desconto $desconto desconto
     *
     * @return $this
     */
    public function setDesconto($desconto)
    {
        $this->container['desconto'] = $desconto;

        return $this;
    }

    /**
     * Gets indicador_alterar_desconto
     *
     * @return string
     */
    public function getIndicadorAlterarDesconto()
    {
        return $this->container['indicador_alterar_desconto'];
    }

    /**
     * Sets indicador_alterar_desconto
     *
     * @param string $indicador_alterar_desconto Indica a intenção de alterar desconto do boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorAlterarDesconto($indicador_alterar_desconto)
    {
        $this->container['indicador_alterar_desconto'] = $indicador_alterar_desconto;

        return $this;
    }

    /**
     * Gets alteracao_desconto
     *
     * @return \Swagger\Client\ModelBoletoBB\AlteracaoDesconto
     */
    public function getAlteracaoDesconto()
    {
        return $this->container['alteracao_desconto'];
    }

    /**
     * Sets alteracao_desconto
     *
     * @param \Swagger\Client\ModelBoletoBB\AlteracaoDesconto $alteracao_desconto alteracao_desconto
     *
     * @return $this
     */
    public function setAlteracaoDesconto($alteracao_desconto)
    {
        $this->container['alteracao_desconto'] = $alteracao_desconto;

        return $this;
    }

    /**
     * Gets indicador_alterar_data_desconto
     *
     * @return string
     */
    public function getIndicadorAlterarDataDesconto()
    {
        return $this->container['indicador_alterar_data_desconto'];
    }

    /**
     * Sets indicador_alterar_data_desconto
     *
     * @param string $indicador_alterar_data_desconto Indica a intenção de alterar a data do desconto do boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorAlterarDataDesconto($indicador_alterar_data_desconto)
    {
        $this->container['indicador_alterar_data_desconto'] = $indicador_alterar_data_desconto;

        return $this;
    }

    /**
     * Gets alteracao_data_desconto
     *
     * @return \Swagger\Client\ModelBoletoBB\AlteracaoDataDesconto
     */
    public function getAlteracaoDataDesconto()
    {
        return $this->container['alteracao_data_desconto'];
    }

    /**
     * Sets alteracao_data_desconto
     *
     * @param \Swagger\Client\ModelBoletoBB\AlteracaoDataDesconto $alteracao_data_desconto alteracao_data_desconto
     *
     * @return $this
     */
    public function setAlteracaoDataDesconto($alteracao_data_desconto)
    {
        $this->container['alteracao_data_desconto'] = $alteracao_data_desconto;

        return $this;
    }

    /**
     * Gets indicador_protestar
     *
     * @return string
     */
    public function getIndicadorProtestar()
    {
        return $this->container['indicador_protestar'];
    }

    /**
     * Sets indicador_protestar
     *
     * @param string $indicador_protestar Indica a intenção de protestar o boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorProtestar($indicador_protestar)
    {
        $this->container['indicador_protestar'] = $indicador_protestar;

        return $this;
    }

    /**
     * Gets protesto
     *
     * @return \Swagger\Client\ModelBoletoBB\Protesto
     */
    public function getProtesto()
    {
        return $this->container['protesto'];
    }

    /**
     * Sets protesto
     *
     * @param \Swagger\Client\ModelBoletoBB\Protesto $protesto protesto
     *
     * @return $this
     */
    public function setProtesto($protesto)
    {
        $this->container['protesto'] = $protesto;

        return $this;
    }

    /**
     * Gets indicador_sustacao_protesto
     *
     * @return string
     */
    public function getIndicadorSustacaoProtesto()
    {
        return $this->container['indicador_sustacao_protesto'];
    }

    /**
     * Sets indicador_sustacao_protesto
     *
     * @param string $indicador_sustacao_protesto Indica a intenção de sustar/cancelar um comando de protesto do boleto que já tenha sido processado pelo Banco. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar.
     *
     * @return $this
     */
    public function setIndicadorSustacaoProtesto($indicador_sustacao_protesto)
    {
        $this->container['indicador_sustacao_protesto'] = $indicador_sustacao_protesto;

        return $this;
    }

    /**
     * Gets indicador_cancelar_protesto
     *
     * @return string
     */
    public function getIndicadorCancelarProtesto()
    {
        return $this->container['indicador_cancelar_protesto'];
    }

    /**
     * Sets indicador_cancelar_protesto
     *
     * @param string $indicador_cancelar_protesto Deve ser utilizada para cancelar uma instrução de protesto enviada ao Banco na mesma data ou que ainda não tenha sido processada pelo Banco. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorCancelarProtesto($indicador_cancelar_protesto)
    {
        $this->container['indicador_cancelar_protesto'] = $indicador_cancelar_protesto;

        return $this;
    }

    /**
     * Gets indicador_incluir_abatimento
     *
     * @return string
     */
    public function getIndicadorIncluirAbatimento()
    {
        return $this->container['indicador_incluir_abatimento'];
    }

    /**
     * Sets indicador_incluir_abatimento
     *
     * @param string $indicador_incluir_abatimento Indica a intenção de incluir abatimento no boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorIncluirAbatimento($indicador_incluir_abatimento)
    {
        $this->container['indicador_incluir_abatimento'] = $indicador_incluir_abatimento;

        return $this;
    }

    /**
     * Gets abatimento
     *
     * @return \Swagger\Client\ModelBoletoBB\Abatimento
     */
    public function getAbatimento()
    {
        return $this->container['abatimento'];
    }

    /**
     * Sets abatimento
     *
     * @param \Swagger\Client\ModelBoletoBB\Abatimento $abatimento abatimento
     *
     * @return $this
     */
    public function setAbatimento($abatimento)
    {
        $this->container['abatimento'] = $abatimento;

        return $this;
    }

    /**
     * Gets indicador_alterar_abatimento
     *
     * @return string
     */
    public function getIndicadorAlterarAbatimento()
    {
        return $this->container['indicador_alterar_abatimento'];
    }

    /**
     * Sets indicador_alterar_abatimento
     *
     * @param string $indicador_alterar_abatimento Indica a intenção de alterar o valor do abatimento no boleto. Domínio: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorAlterarAbatimento($indicador_alterar_abatimento)
    {
        $this->container['indicador_alterar_abatimento'] = $indicador_alterar_abatimento;

        return $this;
    }

    /**
     * Gets alteracao_abatimento
     *
     * @return \Swagger\Client\ModelBoletoBB\AlteracaoAbatimento
     */
    public function getAlteracaoAbatimento()
    {
        return $this->container['alteracao_abatimento'];
    }

    /**
     * Sets alteracao_abatimento
     *
     * @param \Swagger\Client\ModelBoletoBB\AlteracaoAbatimento $alteracao_abatimento alteracao_abatimento
     *
     * @return $this
     */
    public function setAlteracaoAbatimento($alteracao_abatimento)
    {
        $this->container['alteracao_abatimento'] = $alteracao_abatimento;

        return $this;
    }

    /**
     * Gets indicador_cobrar_juros
     *
     * @return string
     */
    public function getIndicadorCobrarJuros()
    {
        return $this->container['indicador_cobrar_juros'];
    }

    /**
     * Sets indicador_cobrar_juros
     *
     * @param string $indicador_cobrar_juros Indica a intenção de cobrar juros no boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorCobrarJuros($indicador_cobrar_juros)
    {
        $this->container['indicador_cobrar_juros'] = $indicador_cobrar_juros;

        return $this;
    }

    /**
     * Gets juros
     *
     * @return \Swagger\Client\ModelBoletoBB\Juros
     */
    public function getJuros()
    {
        return $this->container['juros'];
    }

    /**
     * Sets juros
     *
     * @param \Swagger\Client\ModelBoletoBB\Juros $juros juros
     *
     * @return $this
     */
    public function setJuros($juros)
    {
        $this->container['juros'] = $juros;

        return $this;
    }

    /**
     * Gets indicador_dispensar_juros
     *
     * @return string
     */
    public function getIndicadorDispensarJuros()
    {
        return $this->container['indicador_dispensar_juros'];
    }

    /**
     * Sets indicador_dispensar_juros
     *
     * @param string $indicador_dispensar_juros Indica a intenção de dispensar juros no boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorDispensarJuros($indicador_dispensar_juros)
    {
        $this->container['indicador_dispensar_juros'] = $indicador_dispensar_juros;

        return $this;
    }

    /**
     * Gets indicador_cobrar_multa
     *
     * @return string
     */
    public function getIndicadorCobrarMulta()
    {
        return $this->container['indicador_cobrar_multa'];
    }

    /**
     * Sets indicador_cobrar_multa
     *
     * @param string $indicador_cobrar_multa Indica a intenção de cobrar multa no boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorCobrarMulta($indicador_cobrar_multa)
    {
        $this->container['indicador_cobrar_multa'] = $indicador_cobrar_multa;

        return $this;
    }

    /**
     * Gets multa
     *
     * @return \Swagger\Client\ModelBoletoBB\Multa
     */
    public function getMulta()
    {
        return $this->container['multa'];
    }

    /**
     * Sets multa
     *
     * @param \Swagger\Client\ModelBoletoBB\Multa $multa multa
     *
     * @return $this
     */
    public function setMulta($multa)
    {
        $this->container['multa'] = $multa;

        return $this;
    }

    /**
     * Gets indicador_dispensar_multa
     *
     * @return string
     */
    public function getIndicadorDispensarMulta()
    {
        return $this->container['indicador_dispensar_multa'];
    }

    /**
     * Sets indicador_dispensar_multa
     *
     * @param string $indicador_dispensar_multa Indica a intenção de dispensar cobrança de multa no boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorDispensarMulta($indicador_dispensar_multa)
    {
        $this->container['indicador_dispensar_multa'] = $indicador_dispensar_multa;

        return $this;
    }

    /**
     * Gets indicador_negativar
     *
     * @return string
     */
    public function getIndicadorNegativar()
    {
        return $this->container['indicador_negativar'];
    }

    /**
     * Sets indicador_negativar
     *
     * @param string $indicador_negativar Indica a intenção de negativar ou cancelar negativação boleto. (Inclusão ou Cancelamento) Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorNegativar($indicador_negativar)
    {
        $this->container['indicador_negativar'] = $indicador_negativar;

        return $this;
    }

    /**
     * Gets negativacao
     *
     * @return \Swagger\Client\ModelBoletoBB\Negativacao
     */
    public function getNegativacao()
    {
        return $this->container['negativacao'];
    }

    /**
     * Sets negativacao
     *
     * @param \Swagger\Client\ModelBoletoBB\Negativacao $negativacao negativacao
     *
     * @return $this
     */
    public function setNegativacao($negativacao)
    {
        $this->container['negativacao'] = $negativacao;

        return $this;
    }

    /**
     * Gets indicador_alterar_seu_numero
     *
     * @return string
     */
    public function getIndicadorAlterarSeuNumero()
    {
        return $this->container['indicador_alterar_seu_numero'];
    }

    /**
     * Sets indicador_alterar_seu_numero
     *
     * @param string $indicador_alterar_seu_numero Indica a intenção de alterar Seu Numero no boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorAlterarSeuNumero($indicador_alterar_seu_numero)
    {
        $this->container['indicador_alterar_seu_numero'] = $indicador_alterar_seu_numero;

        return $this;
    }

    /**
     * Gets alteracao_seu_numero
     *
     * @return \Swagger\Client\ModelBoletoBB\AlteracaoSeuNumero
     */
    public function getAlteracaoSeuNumero()
    {
        return $this->container['alteracao_seu_numero'];
    }

    /**
     * Sets alteracao_seu_numero
     *
     * @param \Swagger\Client\ModelBoletoBB\AlteracaoSeuNumero $alteracao_seu_numero alteracao_seu_numero
     *
     * @return $this
     */
    public function setAlteracaoSeuNumero($alteracao_seu_numero)
    {
        $this->container['alteracao_seu_numero'] = $alteracao_seu_numero;

        return $this;
    }

    /**
     * Gets indicador_alterar_endereco_pagador
     *
     * @return string
     */
    public function getIndicadorAlterarEnderecoPagador()
    {
        return $this->container['indicador_alterar_endereco_pagador'];
    }

    /**
     * Sets indicador_alterar_endereco_pagador
     *
     * @param string $indicador_alterar_endereco_pagador Indica a intenção de alterar endereço do Pagador no boleto. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorAlterarEnderecoPagador($indicador_alterar_endereco_pagador)
    {
        $this->container['indicador_alterar_endereco_pagador'] = $indicador_alterar_endereco_pagador;

        return $this;
    }

    /**
     * Gets alteracao_endereco
     *
     * @return \Swagger\Client\ModelBoletoBB\AlteracaoEndereco
     */
    public function getAlteracaoEndereco()
    {
        return $this->container['alteracao_endereco'];
    }

    /**
     * Sets alteracao_endereco
     *
     * @param \Swagger\Client\ModelBoletoBB\AlteracaoEndereco $alteracao_endereco alteracao_endereco
     *
     * @return $this
     */
    public function setAlteracaoEndereco($alteracao_endereco)
    {
        $this->container['alteracao_endereco'] = $alteracao_endereco;

        return $this;
    }

    /**
     * Gets indicador_alterar_prazo_boleto_vencido
     *
     * @return string
     */
    public function getIndicadorAlterarPrazoBoletoVencido()
    {
        return $this->container['indicador_alterar_prazo_boleto_vencido'];
    }

    /**
     * Sets indicador_alterar_prazo_boleto_vencido
     *
     * @param string $indicador_alterar_prazo_boleto_vencido Indica a intenção de prazo de aceite de boleto vencido. Valores a informar: \"S\" -> Sim, desejo alterar \"N\" -> Não, não desejo alterar
     *
     * @return $this
     */
    public function setIndicadorAlterarPrazoBoletoVencido($indicador_alterar_prazo_boleto_vencido)
    {
        $this->container['indicador_alterar_prazo_boleto_vencido'] = $indicador_alterar_prazo_boleto_vencido;

        return $this;
    }

    /**
     * Gets alteracao_prazo
     *
     * @return \Swagger\Client\ModelBoletoBB\AlteracaoPrazo
     */
    public function getAlteracaoPrazo()
    {
        return $this->container['alteracao_prazo'];
    }

    /**
     * Sets alteracao_prazo
     *
     * @param \Swagger\Client\ModelBoletoBB\AlteracaoPrazo $alteracao_prazo alteracao_prazo
     *
     * @return $this
     */
    public function setAlteracaoPrazo($alteracao_prazo)
    {
        $this->container['alteracao_prazo'] = $alteracao_prazo;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
