<?php
/**
 * Desconto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cobranças API
 *
 * API para gerenciar os serviços de cobranças de cliente do Banco do Brasil S.A.
 *
 * OpenAPI spec version: 2.17.3
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.57
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Boleto\Model;

use \ArrayAccess;
use \Swagger\Client\Boleto\ObjectSerializer;

/**
 * Desconto Class Doc Comment
 *
 * @category Class
 * @description Inclusão de desconto em Boleto Bancário
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Desconto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'desconto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'tipo_primeiro_desconto' => 'int',
        'valor_primeiro_desconto' => 'double',
        'percentual_primeiro_desconto' => 'double',
        'data_primeiro_desconto' => 'string',
        'tipo_segundo_desconto' => 'int',
        'valor_segundo_desconto' => 'double',
        'percentual_segundo_desconto' => 'double',
        'data_segundo_desconto' => 'string',
        'tipo_terceiro_desconto' => 'int',
        'valor_terceiro_desconto' => 'double',
        'percentual_terceiro_desconto' => 'double',
        'data_terceiro_desconto' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'tipo_primeiro_desconto' => 'int32',
        'valor_primeiro_desconto' => 'double',
        'percentual_primeiro_desconto' => 'double',
        'data_primeiro_desconto' => null,
        'tipo_segundo_desconto' => 'int32',
        'valor_segundo_desconto' => 'double',
        'percentual_segundo_desconto' => 'double',
        'data_segundo_desconto' => null,
        'tipo_terceiro_desconto' => 'int32',
        'valor_terceiro_desconto' => 'double',
        'percentual_terceiro_desconto' => 'double',
        'data_terceiro_desconto' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'tipo_primeiro_desconto' => 'tipoPrimeiroDesconto',
        'valor_primeiro_desconto' => 'valorPrimeiroDesconto',
        'percentual_primeiro_desconto' => 'percentualPrimeiroDesconto',
        'data_primeiro_desconto' => 'dataPrimeiroDesconto',
        'tipo_segundo_desconto' => 'tipoSegundoDesconto',
        'valor_segundo_desconto' => 'valorSegundoDesconto',
        'percentual_segundo_desconto' => 'percentualSegundoDesconto',
        'data_segundo_desconto' => 'dataSegundoDesconto',
        'tipo_terceiro_desconto' => 'tipoTerceiroDesconto',
        'valor_terceiro_desconto' => 'valorTerceiroDesconto',
        'percentual_terceiro_desconto' => 'percentualTerceiroDesconto',
        'data_terceiro_desconto' => 'dataTerceiroDesconto'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'tipo_primeiro_desconto' => 'setTipoPrimeiroDesconto',
        'valor_primeiro_desconto' => 'setValorPrimeiroDesconto',
        'percentual_primeiro_desconto' => 'setPercentualPrimeiroDesconto',
        'data_primeiro_desconto' => 'setDataPrimeiroDesconto',
        'tipo_segundo_desconto' => 'setTipoSegundoDesconto',
        'valor_segundo_desconto' => 'setValorSegundoDesconto',
        'percentual_segundo_desconto' => 'setPercentualSegundoDesconto',
        'data_segundo_desconto' => 'setDataSegundoDesconto',
        'tipo_terceiro_desconto' => 'setTipoTerceiroDesconto',
        'valor_terceiro_desconto' => 'setValorTerceiroDesconto',
        'percentual_terceiro_desconto' => 'setPercentualTerceiroDesconto',
        'data_terceiro_desconto' => 'setDataTerceiroDesconto'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'tipo_primeiro_desconto' => 'getTipoPrimeiroDesconto',
        'valor_primeiro_desconto' => 'getValorPrimeiroDesconto',
        'percentual_primeiro_desconto' => 'getPercentualPrimeiroDesconto',
        'data_primeiro_desconto' => 'getDataPrimeiroDesconto',
        'tipo_segundo_desconto' => 'getTipoSegundoDesconto',
        'valor_segundo_desconto' => 'getValorSegundoDesconto',
        'percentual_segundo_desconto' => 'getPercentualSegundoDesconto',
        'data_segundo_desconto' => 'getDataSegundoDesconto',
        'tipo_terceiro_desconto' => 'getTipoTerceiroDesconto',
        'valor_terceiro_desconto' => 'getValorTerceiroDesconto',
        'percentual_terceiro_desconto' => 'getPercentualTerceiroDesconto',
        'data_terceiro_desconto' => 'getDataTerceiroDesconto'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['tipo_primeiro_desconto'] = isset($data['tipo_primeiro_desconto']) ? $data['tipo_primeiro_desconto'] : null;
        $this->container['valor_primeiro_desconto'] = isset($data['valor_primeiro_desconto']) ? $data['valor_primeiro_desconto'] : null;
        $this->container['percentual_primeiro_desconto'] = isset($data['percentual_primeiro_desconto']) ? $data['percentual_primeiro_desconto'] : null;
        $this->container['data_primeiro_desconto'] = isset($data['data_primeiro_desconto']) ? $data['data_primeiro_desconto'] : null;
        $this->container['tipo_segundo_desconto'] = isset($data['tipo_segundo_desconto']) ? $data['tipo_segundo_desconto'] : null;
        $this->container['valor_segundo_desconto'] = isset($data['valor_segundo_desconto']) ? $data['valor_segundo_desconto'] : null;
        $this->container['percentual_segundo_desconto'] = isset($data['percentual_segundo_desconto']) ? $data['percentual_segundo_desconto'] : null;
        $this->container['data_segundo_desconto'] = isset($data['data_segundo_desconto']) ? $data['data_segundo_desconto'] : null;
        $this->container['tipo_terceiro_desconto'] = isset($data['tipo_terceiro_desconto']) ? $data['tipo_terceiro_desconto'] : null;
        $this->container['valor_terceiro_desconto'] = isset($data['valor_terceiro_desconto']) ? $data['valor_terceiro_desconto'] : null;
        $this->container['percentual_terceiro_desconto'] = isset($data['percentual_terceiro_desconto']) ? $data['percentual_terceiro_desconto'] : null;
        $this->container['data_terceiro_desconto'] = isset($data['data_terceiro_desconto']) ? $data['data_terceiro_desconto'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets tipo_primeiro_desconto
     *
     * @return int
     */
    public function getTipoPrimeiroDesconto()
    {
        return $this->container['tipo_primeiro_desconto'];
    }

    /**
     * Sets tipo_primeiro_desconto
     *
     * @param int $tipo_primeiro_desconto Código para identificação do tipo de desconto que deverá ser concedido como Primeiro Desconto. Valores a informar: 0 - Sem desconto 1 - Valor fixo até a data 2 - Percentual até a data informada 3 - Desconto por dia de antecipação
     *
     * @return $this
     */
    public function setTipoPrimeiroDesconto($tipo_primeiro_desconto)
    {
        $this->container['tipo_primeiro_desconto'] = $tipo_primeiro_desconto;

        return $this;
    }

    /**
     * Gets valor_primeiro_desconto
     *
     * @return double
     */
    public function getValorPrimeiroDesconto()
    {
        return $this->container['valor_primeiro_desconto'];
    }

    /**
     * Sets valor_primeiro_desconto
     *
     * @param double $valor_primeiro_desconto Valor do Primeiro Desconto
     *
     * @return $this
     */
    public function setValorPrimeiroDesconto($valor_primeiro_desconto)
    {
        $this->container['valor_primeiro_desconto'] = $valor_primeiro_desconto;

        return $this;
    }

    /**
     * Gets percentual_primeiro_desconto
     *
     * @return double
     */
    public function getPercentualPrimeiroDesconto()
    {
        return $this->container['percentual_primeiro_desconto'];
    }

    /**
     * Sets percentual_primeiro_desconto
     *
     * @param double $percentual_primeiro_desconto Percentual de desconto sobre o valor do boleto no Primeiro Desconto
     *
     * @return $this
     */
    public function setPercentualPrimeiroDesconto($percentual_primeiro_desconto)
    {
        $this->container['percentual_primeiro_desconto'] = $percentual_primeiro_desconto;

        return $this;
    }

    /**
     * Gets data_primeiro_desconto
     *
     * @return string
     */
    public function getDataPrimeiroDesconto()
    {
        return $this->container['data_primeiro_desconto'];
    }

    /**
     * Sets data_primeiro_desconto
     *
     * @param string $data_primeiro_desconto Data limite do Primeiro Desconto
     *
     * @return $this
     */
    public function setDataPrimeiroDesconto($data_primeiro_desconto)
    {
        $this->container['data_primeiro_desconto'] = $data_primeiro_desconto;

        return $this;
    }

    /**
     * Gets tipo_segundo_desconto
     *
     * @return int
     */
    public function getTipoSegundoDesconto()
    {
        return $this->container['tipo_segundo_desconto'];
    }

    /**
     * Sets tipo_segundo_desconto
     *
     * @param int $tipo_segundo_desconto Código para identificação do tipo de desconto que deverá ser concedido como Segundo Desconto. Valores a informar: 0 - Sem desconto 1 - Valor fixo até a data 2 - Percentual até a data informada 3 - Desconto por dia de antecipação
     *
     * @return $this
     */
    public function setTipoSegundoDesconto($tipo_segundo_desconto)
    {
        $this->container['tipo_segundo_desconto'] = $tipo_segundo_desconto;

        return $this;
    }

    /**
     * Gets valor_segundo_desconto
     *
     * @return double
     */
    public function getValorSegundoDesconto()
    {
        return $this->container['valor_segundo_desconto'];
    }

    /**
     * Sets valor_segundo_desconto
     *
     * @param double $valor_segundo_desconto Valor do Segundo Desconto
     *
     * @return $this
     */
    public function setValorSegundoDesconto($valor_segundo_desconto)
    {
        $this->container['valor_segundo_desconto'] = $valor_segundo_desconto;

        return $this;
    }

    /**
     * Gets percentual_segundo_desconto
     *
     * @return double
     */
    public function getPercentualSegundoDesconto()
    {
        return $this->container['percentual_segundo_desconto'];
    }

    /**
     * Sets percentual_segundo_desconto
     *
     * @param double $percentual_segundo_desconto Percentual de desconto sobre o valor do boleto no Segundo Desconto
     *
     * @return $this
     */
    public function setPercentualSegundoDesconto($percentual_segundo_desconto)
    {
        $this->container['percentual_segundo_desconto'] = $percentual_segundo_desconto;

        return $this;
    }

    /**
     * Gets data_segundo_desconto
     *
     * @return string
     */
    public function getDataSegundoDesconto()
    {
        return $this->container['data_segundo_desconto'];
    }

    /**
     * Sets data_segundo_desconto
     *
     * @param string $data_segundo_desconto Data limite do Segundo Desconto
     *
     * @return $this
     */
    public function setDataSegundoDesconto($data_segundo_desconto)
    {
        $this->container['data_segundo_desconto'] = $data_segundo_desconto;

        return $this;
    }

    /**
     * Gets tipo_terceiro_desconto
     *
     * @return int
     */
    public function getTipoTerceiroDesconto()
    {
        return $this->container['tipo_terceiro_desconto'];
    }

    /**
     * Sets tipo_terceiro_desconto
     *
     * @param int $tipo_terceiro_desconto Código para identificação do tipo de desconto que deverá ser concedido como Terceiro Desconto. Valores a informar: 0 - Sem desconto 1 - Valor fixo até a data 2 - Percentual até a data informada 3 - Desconto por dia de antecipação
     *
     * @return $this
     */
    public function setTipoTerceiroDesconto($tipo_terceiro_desconto)
    {
        $this->container['tipo_terceiro_desconto'] = $tipo_terceiro_desconto;

        return $this;
    }

    /**
     * Gets valor_terceiro_desconto
     *
     * @return double
     */
    public function getValorTerceiroDesconto()
    {
        return $this->container['valor_terceiro_desconto'];
    }

    /**
     * Sets valor_terceiro_desconto
     *
     * @param double $valor_terceiro_desconto Valor do Terceiro Desconto
     *
     * @return $this
     */
    public function setValorTerceiroDesconto($valor_terceiro_desconto)
    {
        $this->container['valor_terceiro_desconto'] = $valor_terceiro_desconto;

        return $this;
    }

    /**
     * Gets percentual_terceiro_desconto
     *
     * @return double
     */
    public function getPercentualTerceiroDesconto()
    {
        return $this->container['percentual_terceiro_desconto'];
    }

    /**
     * Sets percentual_terceiro_desconto
     *
     * @param double $percentual_terceiro_desconto Percentual de desconto sobre o valor do boleto no Terceiro Desconto
     *
     * @return $this
     */
    public function setPercentualTerceiroDesconto($percentual_terceiro_desconto)
    {
        $this->container['percentual_terceiro_desconto'] = $percentual_terceiro_desconto;

        return $this;
    }

    /**
     * Gets data_terceiro_desconto
     *
     * @return string
     */
    public function getDataTerceiroDesconto()
    {
        return $this->container['data_terceiro_desconto'];
    }

    /**
     * Sets data_terceiro_desconto
     *
     * @param string $data_terceiro_desconto Data limite do Terceiro Desconto
     *
     * @return $this
     */
    public function setDataTerceiroDesconto($data_terceiro_desconto)
    {
        $this->container['data_terceiro_desconto'] = $data_terceiro_desconto;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
