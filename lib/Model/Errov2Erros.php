<?php
/**
 * Errov2Erros
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cobranças API
 *
 * API para gerenciar os serviços de cobranças de cliente do Banco do Brasil S.A.
 *
 * OpenAPI spec version: 2.17.3
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.57
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Boleto\Model;

use \ArrayAccess;
use \Swagger\Client\Boleto\ObjectSerializer;

/**
 * Errov2Erros Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Errov2Erros implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Errov2_erros';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'codigo_mensagem' => 'string',
        'versao_mensagem' => 'string',
        'texto_mensagem' => 'string',
        'codigo_retorno' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'codigo_mensagem' => null,
        'versao_mensagem' => null,
        'texto_mensagem' => null,
        'codigo_retorno' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'codigo_mensagem' => 'codigoMensagem',
        'versao_mensagem' => 'versaoMensagem',
        'texto_mensagem' => 'textoMensagem',
        'codigo_retorno' => 'codigoRetorno'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'codigo_mensagem' => 'setCodigoMensagem',
        'versao_mensagem' => 'setVersaoMensagem',
        'texto_mensagem' => 'setTextoMensagem',
        'codigo_retorno' => 'setCodigoRetorno'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'codigo_mensagem' => 'getCodigoMensagem',
        'versao_mensagem' => 'getVersaoMensagem',
        'texto_mensagem' => 'getTextoMensagem',
        'codigo_retorno' => 'getCodigoRetorno'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['codigo_mensagem'] = isset($data['codigo_mensagem']) ? $data['codigo_mensagem'] : null;
        $this->container['versao_mensagem'] = isset($data['versao_mensagem']) ? $data['versao_mensagem'] : null;
        $this->container['texto_mensagem'] = isset($data['texto_mensagem']) ? $data['texto_mensagem'] : null;
        $this->container['codigo_retorno'] = isset($data['codigo_retorno']) ? $data['codigo_retorno'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets codigo_mensagem
     *
     * @return string
     */
    public function getCodigoMensagem()
    {
        return $this->container['codigo_mensagem'];
    }

    /**
     * Sets codigo_mensagem
     *
     * @param string $codigo_mensagem codigo_mensagem
     *
     * @return $this
     */
    public function setCodigoMensagem($codigo_mensagem)
    {
        $this->container['codigo_mensagem'] = $codigo_mensagem;

        return $this;
    }

    /**
     * Gets versao_mensagem
     *
     * @return string
     */
    public function getVersaoMensagem()
    {
        return $this->container['versao_mensagem'];
    }

    /**
     * Sets versao_mensagem
     *
     * @param string $versao_mensagem versao_mensagem
     *
     * @return $this
     */
    public function setVersaoMensagem($versao_mensagem)
    {
        $this->container['versao_mensagem'] = $versao_mensagem;

        return $this;
    }

    /**
     * Gets texto_mensagem
     *
     * @return string
     */
    public function getTextoMensagem()
    {
        return $this->container['texto_mensagem'];
    }

    /**
     * Sets texto_mensagem
     *
     * @param string $texto_mensagem texto_mensagem
     *
     * @return $this
     */
    public function setTextoMensagem($texto_mensagem)
    {
        $this->container['texto_mensagem'] = $texto_mensagem;

        return $this;
    }

    /**
     * Gets codigo_retorno
     *
     * @return string
     */
    public function getCodigoRetorno()
    {
        return $this->container['codigo_retorno'];
    }

    /**
     * Sets codigo_retorno
     *
     * @param string $codigo_retorno codigo_retorno
     *
     * @return $this
     */
    public function setCodigoRetorno($codigo_retorno)
    {
        $this->container['codigo_retorno'] = $codigo_retorno;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
