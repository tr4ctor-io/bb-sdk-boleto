<?php
/**
 * RespostaDetalhamentoBoleto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Cobranças API
 *
 * API para gerenciar os serviços de cobranças de cliente do Banco do Brasil S.A.
 *
 * OpenAPI spec version: 2.17.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.57
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * RespostaDetalhamentoBoleto Class Doc Comment
 *
 * @category Class
 * @description Representação dos campos de resposta de uma solicitação de detalhamento de boletos bancários.
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RespostaDetalhamentoBoleto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RespostaDetalhamentoBoleto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'codigo_linha_digitavel' => 'string',
        'texto_email_pagador' => 'string',
        'texto_mensagem_bloqueto_titulo' => 'string',
        'codigo_tipo_multa' => 'float',
        'codigo_canal_pagamento' => 'float',
        'numero_contrato_cobranca' => 'float',
        'codigo_tipo_inscricao_sacado' => 'float',
        'numero_inscricao_sacado_cobranca' => 'float',
        'codigo_estado_titulo_cobranca' => 'float',
        'codigo_tipo_titulo_cobranca' => 'float',
        'codigo_modalidade_titulo' => 'float',
        'codigo_aceite_titulo_cobranca' => 'string',
        'codigo_prefixo_dependencia_cobrador' => 'float',
        'codigo_indicador_economico' => 'float',
        'numero_titulo_cedente_cobranca' => 'string',
        'codigo_tipo_juro_mora' => 'float',
        'data_emissao_titulo_cobranca' => 'string',
        'data_registro_titulo_cobranca' => 'string',
        'data_vencimento_titulo_cobranca' => 'string',
        'valor_original_titulo_cobranca' => 'float',
        'valor_atual_titulo_cobranca' => 'float',
        'valor_pagamento_parcial_titulo' => 'float',
        'valor_abatimento_titulo_cobranca' => 'float',
        'percentual_imposto_sobre_opr_financeiras_titulo_cobranca' => 'float',
        'valor_imposto_sobre_opr_financeiras_titulo_cobranca' => 'float',
        'valor_moeda_titulo_cobranca' => 'float',
        'percentual_juro_mora_titulo' => 'float',
        'valor_juro_mora_titulo' => 'float',
        'percentual_multa_titulo' => 'float',
        'valor_multa_titulo_cobranca' => 'float',
        'quantidade_parcela_titulo_cobranca' => 'float',
        'data_baixa_automatico_titulo' => 'string',
        'texto_campo_utilizacao_cedente' => 'string',
        'indicador_cobranca_partilhado_titulo' => 'string',
        'nome_sacado_cobranca' => 'string',
        'texto_endereco_sacado_cobranca' => 'string',
        'nome_bairro_sacado_cobranca' => 'string',
        'nome_municipio_sacado_cobranca' => 'string',
        'sigla_unidade_federacao_sacado_cobranca' => 'string',
        'numero_cep_sacado_cobranca' => 'float',
        'valor_moeda_abatimento_titulo' => 'float',
        'data_protesto_titulo_cobranca' => 'string',
        'codigo_tipo_inscricao_sacador' => 'float',
        'numero_inscricao_sacador_avalista' => 'float',
        'nome_sacador_avalista_titulo' => 'string',
        'percentual_desconto_titulo' => 'float',
        'data_desconto_titulo' => 'string',
        'valor_desconto_titulo' => 'float',
        'codigo_desconto_titulo' => 'float',
        'percentual_segundo_desconto_titulo' => 'float',
        'data_segundo_desconto_titulo' => 'string',
        'valor_segundo_desconto_titulo' => 'float',
        'codigo_segundo_desconto_titulo' => 'float',
        'percentual_terceiro_desconto_titulo' => 'float',
        'data_terceiro_desconto_titulo' => 'string',
        'valor_terceiro_desconto_titulo' => 'float',
        'codigo_terceiro_desconto_titulo' => 'float',
        'data_multa_titulo' => 'string',
        'numero_carteira_cobranca' => 'float',
        'numero_variacao_carteira_cobranca' => 'float',
        'quantidade_dia_protesto' => 'float',
        'quantidade_dia_prazo_limite_recebimento' => 'float',
        'data_limite_recebimento_titulo' => 'string',
        'indicador_permissao_recebimento_parcial' => 'string',
        'texto_codigo_barras_titulo_cobranca' => 'string',
        'codigo_ocorrencia_cartorio' => 'float',
        'valor_imposto_sobre_opr_financeiras_recebido_titulo' => 'float',
        'valor_abatimento_total' => 'float',
        'valor_juro_mora_recebido' => 'float',
        'valor_desconto_utilizado' => 'float',
        'valor_pago_sacado' => 'float',
        'valor_credito_cedente' => 'float',
        'codigo_tipo_liquidacao' => 'float',
        'data_credito_liquidacao' => 'string',
        'data_recebimento_titulo' => 'string',
        'codigo_prefixo_dependencia_recebedor' => 'float',
        'codigo_natureza_recebimento' => 'float',
        'numero_identidade_sacado_titulo_cobranca' => 'string',
        'codigo_responsavel_atualizacao' => 'string',
        'codigo_tipo_baixa_titulo' => 'float',
        'valor_multa_recebido' => 'float',
        'valor_reajuste' => 'float',
        'valor_outro_recebido' => 'float',
        'codigo_indicador_economico_utilizado_inadimplencia' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'codigo_linha_digitavel' => null,
        'texto_email_pagador' => null,
        'texto_mensagem_bloqueto_titulo' => null,
        'codigo_tipo_multa' => null,
        'codigo_canal_pagamento' => null,
        'numero_contrato_cobranca' => null,
        'codigo_tipo_inscricao_sacado' => null,
        'numero_inscricao_sacado_cobranca' => null,
        'codigo_estado_titulo_cobranca' => null,
        'codigo_tipo_titulo_cobranca' => null,
        'codigo_modalidade_titulo' => null,
        'codigo_aceite_titulo_cobranca' => null,
        'codigo_prefixo_dependencia_cobrador' => null,
        'codigo_indicador_economico' => null,
        'numero_titulo_cedente_cobranca' => null,
        'codigo_tipo_juro_mora' => null,
        'data_emissao_titulo_cobranca' => null,
        'data_registro_titulo_cobranca' => null,
        'data_vencimento_titulo_cobranca' => null,
        'valor_original_titulo_cobranca' => 'float',
        'valor_atual_titulo_cobranca' => 'float',
        'valor_pagamento_parcial_titulo' => 'float',
        'valor_abatimento_titulo_cobranca' => 'float',
        'percentual_imposto_sobre_opr_financeiras_titulo_cobranca' => 'float',
        'valor_imposto_sobre_opr_financeiras_titulo_cobranca' => 'float',
        'valor_moeda_titulo_cobranca' => 'float',
        'percentual_juro_mora_titulo' => null,
        'valor_juro_mora_titulo' => 'float',
        'percentual_multa_titulo' => 'float',
        'valor_multa_titulo_cobranca' => 'float',
        'quantidade_parcela_titulo_cobranca' => null,
        'data_baixa_automatico_titulo' => null,
        'texto_campo_utilizacao_cedente' => null,
        'indicador_cobranca_partilhado_titulo' => null,
        'nome_sacado_cobranca' => null,
        'texto_endereco_sacado_cobranca' => null,
        'nome_bairro_sacado_cobranca' => null,
        'nome_municipio_sacado_cobranca' => null,
        'sigla_unidade_federacao_sacado_cobranca' => null,
        'numero_cep_sacado_cobranca' => null,
        'valor_moeda_abatimento_titulo' => 'float',
        'data_protesto_titulo_cobranca' => null,
        'codigo_tipo_inscricao_sacador' => null,
        'numero_inscricao_sacador_avalista' => null,
        'nome_sacador_avalista_titulo' => null,
        'percentual_desconto_titulo' => 'float',
        'data_desconto_titulo' => null,
        'valor_desconto_titulo' => 'float',
        'codigo_desconto_titulo' => null,
        'percentual_segundo_desconto_titulo' => 'float',
        'data_segundo_desconto_titulo' => null,
        'valor_segundo_desconto_titulo' => 'float',
        'codigo_segundo_desconto_titulo' => null,
        'percentual_terceiro_desconto_titulo' => 'float',
        'data_terceiro_desconto_titulo' => null,
        'valor_terceiro_desconto_titulo' => 'float',
        'codigo_terceiro_desconto_titulo' => null,
        'data_multa_titulo' => null,
        'numero_carteira_cobranca' => null,
        'numero_variacao_carteira_cobranca' => null,
        'quantidade_dia_protesto' => null,
        'quantidade_dia_prazo_limite_recebimento' => null,
        'data_limite_recebimento_titulo' => null,
        'indicador_permissao_recebimento_parcial' => null,
        'texto_codigo_barras_titulo_cobranca' => null,
        'codigo_ocorrencia_cartorio' => null,
        'valor_imposto_sobre_opr_financeiras_recebido_titulo' => 'float',
        'valor_abatimento_total' => 'float',
        'valor_juro_mora_recebido' => 'float',
        'valor_desconto_utilizado' => 'float',
        'valor_pago_sacado' => 'float',
        'valor_credito_cedente' => 'float',
        'codigo_tipo_liquidacao' => null,
        'data_credito_liquidacao' => null,
        'data_recebimento_titulo' => null,
        'codigo_prefixo_dependencia_recebedor' => null,
        'codigo_natureza_recebimento' => null,
        'numero_identidade_sacado_titulo_cobranca' => null,
        'codigo_responsavel_atualizacao' => null,
        'codigo_tipo_baixa_titulo' => null,
        'valor_multa_recebido' => 'float',
        'valor_reajuste' => 'float',
        'valor_outro_recebido' => 'float',
        'codigo_indicador_economico_utilizado_inadimplencia' => 'float'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'codigo_linha_digitavel' => 'codigoLinhaDigitavel',
        'texto_email_pagador' => 'textoEmailPagador',
        'texto_mensagem_bloqueto_titulo' => 'textoMensagemBloquetoTitulo',
        'codigo_tipo_multa' => 'codigoTipoMulta',
        'codigo_canal_pagamento' => 'codigoCanalPagamento',
        'numero_contrato_cobranca' => 'numeroContratoCobranca',
        'codigo_tipo_inscricao_sacado' => 'codigoTipoInscricaoSacado',
        'numero_inscricao_sacado_cobranca' => 'numeroInscricaoSacadoCobranca',
        'codigo_estado_titulo_cobranca' => 'codigoEstadoTituloCobranca',
        'codigo_tipo_titulo_cobranca' => 'codigoTipoTituloCobranca',
        'codigo_modalidade_titulo' => 'codigoModalidadeTitulo',
        'codigo_aceite_titulo_cobranca' => 'codigoAceiteTituloCobranca',
        'codigo_prefixo_dependencia_cobrador' => 'codigoPrefixoDependenciaCobrador',
        'codigo_indicador_economico' => 'codigoIndicadorEconomico',
        'numero_titulo_cedente_cobranca' => 'numeroTituloCedenteCobranca',
        'codigo_tipo_juro_mora' => 'codigoTipoJuroMora',
        'data_emissao_titulo_cobranca' => 'dataEmissaoTituloCobranca',
        'data_registro_titulo_cobranca' => 'dataRegistroTituloCobranca',
        'data_vencimento_titulo_cobranca' => 'dataVencimentoTituloCobranca',
        'valor_original_titulo_cobranca' => 'valorOriginalTituloCobranca',
        'valor_atual_titulo_cobranca' => 'valorAtualTituloCobranca',
        'valor_pagamento_parcial_titulo' => 'valorPagamentoParcialTitulo',
        'valor_abatimento_titulo_cobranca' => 'valorAbatimentoTituloCobranca',
        'percentual_imposto_sobre_opr_financeiras_titulo_cobranca' => 'percentualImpostoSobreOprFinanceirasTituloCobranca',
        'valor_imposto_sobre_opr_financeiras_titulo_cobranca' => 'valorImpostoSobreOprFinanceirasTituloCobranca',
        'valor_moeda_titulo_cobranca' => 'valorMoedaTituloCobranca',
        'percentual_juro_mora_titulo' => 'percentualJuroMoraTitulo',
        'valor_juro_mora_titulo' => 'valorJuroMoraTitulo',
        'percentual_multa_titulo' => 'percentualMultaTitulo',
        'valor_multa_titulo_cobranca' => 'valorMultaTituloCobranca',
        'quantidade_parcela_titulo_cobranca' => 'quantidadeParcelaTituloCobranca',
        'data_baixa_automatico_titulo' => 'dataBaixaAutomaticoTitulo',
        'texto_campo_utilizacao_cedente' => 'textoCampoUtilizacaoCedente',
        'indicador_cobranca_partilhado_titulo' => 'indicadorCobrancaPartilhadoTitulo',
        'nome_sacado_cobranca' => 'nomeSacadoCobranca',
        'texto_endereco_sacado_cobranca' => 'textoEnderecoSacadoCobranca',
        'nome_bairro_sacado_cobranca' => 'nomeBairroSacadoCobranca',
        'nome_municipio_sacado_cobranca' => 'nomeMunicipioSacadoCobranca',
        'sigla_unidade_federacao_sacado_cobranca' => 'siglaUnidadeFederacaoSacadoCobranca',
        'numero_cep_sacado_cobranca' => 'numeroCepSacadoCobranca',
        'valor_moeda_abatimento_titulo' => 'valorMoedaAbatimentoTitulo',
        'data_protesto_titulo_cobranca' => 'dataProtestoTituloCobranca',
        'codigo_tipo_inscricao_sacador' => 'codigoTipoInscricaoSacador',
        'numero_inscricao_sacador_avalista' => 'numeroInscricaoSacadorAvalista',
        'nome_sacador_avalista_titulo' => 'nomeSacadorAvalistaTitulo',
        'percentual_desconto_titulo' => 'percentualDescontoTitulo',
        'data_desconto_titulo' => 'dataDescontoTitulo',
        'valor_desconto_titulo' => 'valorDescontoTitulo',
        'codigo_desconto_titulo' => 'codigoDescontoTitulo',
        'percentual_segundo_desconto_titulo' => 'percentualSegundoDescontoTitulo',
        'data_segundo_desconto_titulo' => 'dataSegundoDescontoTitulo',
        'valor_segundo_desconto_titulo' => 'valorSegundoDescontoTitulo',
        'codigo_segundo_desconto_titulo' => 'codigoSegundoDescontoTitulo',
        'percentual_terceiro_desconto_titulo' => 'percentualTerceiroDescontoTitulo',
        'data_terceiro_desconto_titulo' => 'dataTerceiroDescontoTitulo',
        'valor_terceiro_desconto_titulo' => 'valorTerceiroDescontoTitulo',
        'codigo_terceiro_desconto_titulo' => 'codigoTerceiroDescontoTitulo',
        'data_multa_titulo' => 'dataMultaTitulo',
        'numero_carteira_cobranca' => 'numeroCarteiraCobranca',
        'numero_variacao_carteira_cobranca' => 'numeroVariacaoCarteiraCobranca',
        'quantidade_dia_protesto' => 'quantidadeDiaProtesto',
        'quantidade_dia_prazo_limite_recebimento' => 'quantidadeDiaPrazoLimiteRecebimento',
        'data_limite_recebimento_titulo' => 'dataLimiteRecebimentoTitulo',
        'indicador_permissao_recebimento_parcial' => 'indicadorPermissaoRecebimentoParcial',
        'texto_codigo_barras_titulo_cobranca' => 'textoCodigoBarrasTituloCobranca',
        'codigo_ocorrencia_cartorio' => 'codigoOcorrenciaCartorio',
        'valor_imposto_sobre_opr_financeiras_recebido_titulo' => 'valorImpostoSobreOprFinanceirasRecebidoTitulo',
        'valor_abatimento_total' => 'valorAbatimentoTotal',
        'valor_juro_mora_recebido' => 'valorJuroMoraRecebido',
        'valor_desconto_utilizado' => 'valorDescontoUtilizado',
        'valor_pago_sacado' => 'valorPagoSacado',
        'valor_credito_cedente' => 'valorCreditoCedente',
        'codigo_tipo_liquidacao' => 'codigoTipoLiquidacao',
        'data_credito_liquidacao' => 'dataCreditoLiquidacao',
        'data_recebimento_titulo' => 'dataRecebimentoTitulo',
        'codigo_prefixo_dependencia_recebedor' => 'codigoPrefixoDependenciaRecebedor',
        'codigo_natureza_recebimento' => 'codigoNaturezaRecebimento',
        'numero_identidade_sacado_titulo_cobranca' => 'numeroIdentidadeSacadoTituloCobranca',
        'codigo_responsavel_atualizacao' => 'codigoResponsavelAtualizacao',
        'codigo_tipo_baixa_titulo' => 'codigoTipoBaixaTitulo',
        'valor_multa_recebido' => 'valorMultaRecebido',
        'valor_reajuste' => 'valorReajuste',
        'valor_outro_recebido' => 'valorOutroRecebido',
        'codigo_indicador_economico_utilizado_inadimplencia' => 'codigoIndicadorEconomicoUtilizadoInadimplencia'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'codigo_linha_digitavel' => 'setCodigoLinhaDigitavel',
        'texto_email_pagador' => 'setTextoEmailPagador',
        'texto_mensagem_bloqueto_titulo' => 'setTextoMensagemBloquetoTitulo',
        'codigo_tipo_multa' => 'setCodigoTipoMulta',
        'codigo_canal_pagamento' => 'setCodigoCanalPagamento',
        'numero_contrato_cobranca' => 'setNumeroContratoCobranca',
        'codigo_tipo_inscricao_sacado' => 'setCodigoTipoInscricaoSacado',
        'numero_inscricao_sacado_cobranca' => 'setNumeroInscricaoSacadoCobranca',
        'codigo_estado_titulo_cobranca' => 'setCodigoEstadoTituloCobranca',
        'codigo_tipo_titulo_cobranca' => 'setCodigoTipoTituloCobranca',
        'codigo_modalidade_titulo' => 'setCodigoModalidadeTitulo',
        'codigo_aceite_titulo_cobranca' => 'setCodigoAceiteTituloCobranca',
        'codigo_prefixo_dependencia_cobrador' => 'setCodigoPrefixoDependenciaCobrador',
        'codigo_indicador_economico' => 'setCodigoIndicadorEconomico',
        'numero_titulo_cedente_cobranca' => 'setNumeroTituloCedenteCobranca',
        'codigo_tipo_juro_mora' => 'setCodigoTipoJuroMora',
        'data_emissao_titulo_cobranca' => 'setDataEmissaoTituloCobranca',
        'data_registro_titulo_cobranca' => 'setDataRegistroTituloCobranca',
        'data_vencimento_titulo_cobranca' => 'setDataVencimentoTituloCobranca',
        'valor_original_titulo_cobranca' => 'setValorOriginalTituloCobranca',
        'valor_atual_titulo_cobranca' => 'setValorAtualTituloCobranca',
        'valor_pagamento_parcial_titulo' => 'setValorPagamentoParcialTitulo',
        'valor_abatimento_titulo_cobranca' => 'setValorAbatimentoTituloCobranca',
        'percentual_imposto_sobre_opr_financeiras_titulo_cobranca' => 'setPercentualImpostoSobreOprFinanceirasTituloCobranca',
        'valor_imposto_sobre_opr_financeiras_titulo_cobranca' => 'setValorImpostoSobreOprFinanceirasTituloCobranca',
        'valor_moeda_titulo_cobranca' => 'setValorMoedaTituloCobranca',
        'percentual_juro_mora_titulo' => 'setPercentualJuroMoraTitulo',
        'valor_juro_mora_titulo' => 'setValorJuroMoraTitulo',
        'percentual_multa_titulo' => 'setPercentualMultaTitulo',
        'valor_multa_titulo_cobranca' => 'setValorMultaTituloCobranca',
        'quantidade_parcela_titulo_cobranca' => 'setQuantidadeParcelaTituloCobranca',
        'data_baixa_automatico_titulo' => 'setDataBaixaAutomaticoTitulo',
        'texto_campo_utilizacao_cedente' => 'setTextoCampoUtilizacaoCedente',
        'indicador_cobranca_partilhado_titulo' => 'setIndicadorCobrancaPartilhadoTitulo',
        'nome_sacado_cobranca' => 'setNomeSacadoCobranca',
        'texto_endereco_sacado_cobranca' => 'setTextoEnderecoSacadoCobranca',
        'nome_bairro_sacado_cobranca' => 'setNomeBairroSacadoCobranca',
        'nome_municipio_sacado_cobranca' => 'setNomeMunicipioSacadoCobranca',
        'sigla_unidade_federacao_sacado_cobranca' => 'setSiglaUnidadeFederacaoSacadoCobranca',
        'numero_cep_sacado_cobranca' => 'setNumeroCepSacadoCobranca',
        'valor_moeda_abatimento_titulo' => 'setValorMoedaAbatimentoTitulo',
        'data_protesto_titulo_cobranca' => 'setDataProtestoTituloCobranca',
        'codigo_tipo_inscricao_sacador' => 'setCodigoTipoInscricaoSacador',
        'numero_inscricao_sacador_avalista' => 'setNumeroInscricaoSacadorAvalista',
        'nome_sacador_avalista_titulo' => 'setNomeSacadorAvalistaTitulo',
        'percentual_desconto_titulo' => 'setPercentualDescontoTitulo',
        'data_desconto_titulo' => 'setDataDescontoTitulo',
        'valor_desconto_titulo' => 'setValorDescontoTitulo',
        'codigo_desconto_titulo' => 'setCodigoDescontoTitulo',
        'percentual_segundo_desconto_titulo' => 'setPercentualSegundoDescontoTitulo',
        'data_segundo_desconto_titulo' => 'setDataSegundoDescontoTitulo',
        'valor_segundo_desconto_titulo' => 'setValorSegundoDescontoTitulo',
        'codigo_segundo_desconto_titulo' => 'setCodigoSegundoDescontoTitulo',
        'percentual_terceiro_desconto_titulo' => 'setPercentualTerceiroDescontoTitulo',
        'data_terceiro_desconto_titulo' => 'setDataTerceiroDescontoTitulo',
        'valor_terceiro_desconto_titulo' => 'setValorTerceiroDescontoTitulo',
        'codigo_terceiro_desconto_titulo' => 'setCodigoTerceiroDescontoTitulo',
        'data_multa_titulo' => 'setDataMultaTitulo',
        'numero_carteira_cobranca' => 'setNumeroCarteiraCobranca',
        'numero_variacao_carteira_cobranca' => 'setNumeroVariacaoCarteiraCobranca',
        'quantidade_dia_protesto' => 'setQuantidadeDiaProtesto',
        'quantidade_dia_prazo_limite_recebimento' => 'setQuantidadeDiaPrazoLimiteRecebimento',
        'data_limite_recebimento_titulo' => 'setDataLimiteRecebimentoTitulo',
        'indicador_permissao_recebimento_parcial' => 'setIndicadorPermissaoRecebimentoParcial',
        'texto_codigo_barras_titulo_cobranca' => 'setTextoCodigoBarrasTituloCobranca',
        'codigo_ocorrencia_cartorio' => 'setCodigoOcorrenciaCartorio',
        'valor_imposto_sobre_opr_financeiras_recebido_titulo' => 'setValorImpostoSobreOprFinanceirasRecebidoTitulo',
        'valor_abatimento_total' => 'setValorAbatimentoTotal',
        'valor_juro_mora_recebido' => 'setValorJuroMoraRecebido',
        'valor_desconto_utilizado' => 'setValorDescontoUtilizado',
        'valor_pago_sacado' => 'setValorPagoSacado',
        'valor_credito_cedente' => 'setValorCreditoCedente',
        'codigo_tipo_liquidacao' => 'setCodigoTipoLiquidacao',
        'data_credito_liquidacao' => 'setDataCreditoLiquidacao',
        'data_recebimento_titulo' => 'setDataRecebimentoTitulo',
        'codigo_prefixo_dependencia_recebedor' => 'setCodigoPrefixoDependenciaRecebedor',
        'codigo_natureza_recebimento' => 'setCodigoNaturezaRecebimento',
        'numero_identidade_sacado_titulo_cobranca' => 'setNumeroIdentidadeSacadoTituloCobranca',
        'codigo_responsavel_atualizacao' => 'setCodigoResponsavelAtualizacao',
        'codigo_tipo_baixa_titulo' => 'setCodigoTipoBaixaTitulo',
        'valor_multa_recebido' => 'setValorMultaRecebido',
        'valor_reajuste' => 'setValorReajuste',
        'valor_outro_recebido' => 'setValorOutroRecebido',
        'codigo_indicador_economico_utilizado_inadimplencia' => 'setCodigoIndicadorEconomicoUtilizadoInadimplencia'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'codigo_linha_digitavel' => 'getCodigoLinhaDigitavel',
        'texto_email_pagador' => 'getTextoEmailPagador',
        'texto_mensagem_bloqueto_titulo' => 'getTextoMensagemBloquetoTitulo',
        'codigo_tipo_multa' => 'getCodigoTipoMulta',
        'codigo_canal_pagamento' => 'getCodigoCanalPagamento',
        'numero_contrato_cobranca' => 'getNumeroContratoCobranca',
        'codigo_tipo_inscricao_sacado' => 'getCodigoTipoInscricaoSacado',
        'numero_inscricao_sacado_cobranca' => 'getNumeroInscricaoSacadoCobranca',
        'codigo_estado_titulo_cobranca' => 'getCodigoEstadoTituloCobranca',
        'codigo_tipo_titulo_cobranca' => 'getCodigoTipoTituloCobranca',
        'codigo_modalidade_titulo' => 'getCodigoModalidadeTitulo',
        'codigo_aceite_titulo_cobranca' => 'getCodigoAceiteTituloCobranca',
        'codigo_prefixo_dependencia_cobrador' => 'getCodigoPrefixoDependenciaCobrador',
        'codigo_indicador_economico' => 'getCodigoIndicadorEconomico',
        'numero_titulo_cedente_cobranca' => 'getNumeroTituloCedenteCobranca',
        'codigo_tipo_juro_mora' => 'getCodigoTipoJuroMora',
        'data_emissao_titulo_cobranca' => 'getDataEmissaoTituloCobranca',
        'data_registro_titulo_cobranca' => 'getDataRegistroTituloCobranca',
        'data_vencimento_titulo_cobranca' => 'getDataVencimentoTituloCobranca',
        'valor_original_titulo_cobranca' => 'getValorOriginalTituloCobranca',
        'valor_atual_titulo_cobranca' => 'getValorAtualTituloCobranca',
        'valor_pagamento_parcial_titulo' => 'getValorPagamentoParcialTitulo',
        'valor_abatimento_titulo_cobranca' => 'getValorAbatimentoTituloCobranca',
        'percentual_imposto_sobre_opr_financeiras_titulo_cobranca' => 'getPercentualImpostoSobreOprFinanceirasTituloCobranca',
        'valor_imposto_sobre_opr_financeiras_titulo_cobranca' => 'getValorImpostoSobreOprFinanceirasTituloCobranca',
        'valor_moeda_titulo_cobranca' => 'getValorMoedaTituloCobranca',
        'percentual_juro_mora_titulo' => 'getPercentualJuroMoraTitulo',
        'valor_juro_mora_titulo' => 'getValorJuroMoraTitulo',
        'percentual_multa_titulo' => 'getPercentualMultaTitulo',
        'valor_multa_titulo_cobranca' => 'getValorMultaTituloCobranca',
        'quantidade_parcela_titulo_cobranca' => 'getQuantidadeParcelaTituloCobranca',
        'data_baixa_automatico_titulo' => 'getDataBaixaAutomaticoTitulo',
        'texto_campo_utilizacao_cedente' => 'getTextoCampoUtilizacaoCedente',
        'indicador_cobranca_partilhado_titulo' => 'getIndicadorCobrancaPartilhadoTitulo',
        'nome_sacado_cobranca' => 'getNomeSacadoCobranca',
        'texto_endereco_sacado_cobranca' => 'getTextoEnderecoSacadoCobranca',
        'nome_bairro_sacado_cobranca' => 'getNomeBairroSacadoCobranca',
        'nome_municipio_sacado_cobranca' => 'getNomeMunicipioSacadoCobranca',
        'sigla_unidade_federacao_sacado_cobranca' => 'getSiglaUnidadeFederacaoSacadoCobranca',
        'numero_cep_sacado_cobranca' => 'getNumeroCepSacadoCobranca',
        'valor_moeda_abatimento_titulo' => 'getValorMoedaAbatimentoTitulo',
        'data_protesto_titulo_cobranca' => 'getDataProtestoTituloCobranca',
        'codigo_tipo_inscricao_sacador' => 'getCodigoTipoInscricaoSacador',
        'numero_inscricao_sacador_avalista' => 'getNumeroInscricaoSacadorAvalista',
        'nome_sacador_avalista_titulo' => 'getNomeSacadorAvalistaTitulo',
        'percentual_desconto_titulo' => 'getPercentualDescontoTitulo',
        'data_desconto_titulo' => 'getDataDescontoTitulo',
        'valor_desconto_titulo' => 'getValorDescontoTitulo',
        'codigo_desconto_titulo' => 'getCodigoDescontoTitulo',
        'percentual_segundo_desconto_titulo' => 'getPercentualSegundoDescontoTitulo',
        'data_segundo_desconto_titulo' => 'getDataSegundoDescontoTitulo',
        'valor_segundo_desconto_titulo' => 'getValorSegundoDescontoTitulo',
        'codigo_segundo_desconto_titulo' => 'getCodigoSegundoDescontoTitulo',
        'percentual_terceiro_desconto_titulo' => 'getPercentualTerceiroDescontoTitulo',
        'data_terceiro_desconto_titulo' => 'getDataTerceiroDescontoTitulo',
        'valor_terceiro_desconto_titulo' => 'getValorTerceiroDescontoTitulo',
        'codigo_terceiro_desconto_titulo' => 'getCodigoTerceiroDescontoTitulo',
        'data_multa_titulo' => 'getDataMultaTitulo',
        'numero_carteira_cobranca' => 'getNumeroCarteiraCobranca',
        'numero_variacao_carteira_cobranca' => 'getNumeroVariacaoCarteiraCobranca',
        'quantidade_dia_protesto' => 'getQuantidadeDiaProtesto',
        'quantidade_dia_prazo_limite_recebimento' => 'getQuantidadeDiaPrazoLimiteRecebimento',
        'data_limite_recebimento_titulo' => 'getDataLimiteRecebimentoTitulo',
        'indicador_permissao_recebimento_parcial' => 'getIndicadorPermissaoRecebimentoParcial',
        'texto_codigo_barras_titulo_cobranca' => 'getTextoCodigoBarrasTituloCobranca',
        'codigo_ocorrencia_cartorio' => 'getCodigoOcorrenciaCartorio',
        'valor_imposto_sobre_opr_financeiras_recebido_titulo' => 'getValorImpostoSobreOprFinanceirasRecebidoTitulo',
        'valor_abatimento_total' => 'getValorAbatimentoTotal',
        'valor_juro_mora_recebido' => 'getValorJuroMoraRecebido',
        'valor_desconto_utilizado' => 'getValorDescontoUtilizado',
        'valor_pago_sacado' => 'getValorPagoSacado',
        'valor_credito_cedente' => 'getValorCreditoCedente',
        'codigo_tipo_liquidacao' => 'getCodigoTipoLiquidacao',
        'data_credito_liquidacao' => 'getDataCreditoLiquidacao',
        'data_recebimento_titulo' => 'getDataRecebimentoTitulo',
        'codigo_prefixo_dependencia_recebedor' => 'getCodigoPrefixoDependenciaRecebedor',
        'codigo_natureza_recebimento' => 'getCodigoNaturezaRecebimento',
        'numero_identidade_sacado_titulo_cobranca' => 'getNumeroIdentidadeSacadoTituloCobranca',
        'codigo_responsavel_atualizacao' => 'getCodigoResponsavelAtualizacao',
        'codigo_tipo_baixa_titulo' => 'getCodigoTipoBaixaTitulo',
        'valor_multa_recebido' => 'getValorMultaRecebido',
        'valor_reajuste' => 'getValorReajuste',
        'valor_outro_recebido' => 'getValorOutroRecebido',
        'codigo_indicador_economico_utilizado_inadimplencia' => 'getCodigoIndicadorEconomicoUtilizadoInadimplencia'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['codigo_linha_digitavel'] = isset($data['codigo_linha_digitavel']) ? $data['codigo_linha_digitavel'] : null;
        $this->container['texto_email_pagador'] = isset($data['texto_email_pagador']) ? $data['texto_email_pagador'] : null;
        $this->container['texto_mensagem_bloqueto_titulo'] = isset($data['texto_mensagem_bloqueto_titulo']) ? $data['texto_mensagem_bloqueto_titulo'] : null;
        $this->container['codigo_tipo_multa'] = isset($data['codigo_tipo_multa']) ? $data['codigo_tipo_multa'] : null;
        $this->container['codigo_canal_pagamento'] = isset($data['codigo_canal_pagamento']) ? $data['codigo_canal_pagamento'] : null;
        $this->container['numero_contrato_cobranca'] = isset($data['numero_contrato_cobranca']) ? $data['numero_contrato_cobranca'] : null;
        $this->container['codigo_tipo_inscricao_sacado'] = isset($data['codigo_tipo_inscricao_sacado']) ? $data['codigo_tipo_inscricao_sacado'] : null;
        $this->container['numero_inscricao_sacado_cobranca'] = isset($data['numero_inscricao_sacado_cobranca']) ? $data['numero_inscricao_sacado_cobranca'] : null;
        $this->container['codigo_estado_titulo_cobranca'] = isset($data['codigo_estado_titulo_cobranca']) ? $data['codigo_estado_titulo_cobranca'] : null;
        $this->container['codigo_tipo_titulo_cobranca'] = isset($data['codigo_tipo_titulo_cobranca']) ? $data['codigo_tipo_titulo_cobranca'] : null;
        $this->container['codigo_modalidade_titulo'] = isset($data['codigo_modalidade_titulo']) ? $data['codigo_modalidade_titulo'] : null;
        $this->container['codigo_aceite_titulo_cobranca'] = isset($data['codigo_aceite_titulo_cobranca']) ? $data['codigo_aceite_titulo_cobranca'] : null;
        $this->container['codigo_prefixo_dependencia_cobrador'] = isset($data['codigo_prefixo_dependencia_cobrador']) ? $data['codigo_prefixo_dependencia_cobrador'] : null;
        $this->container['codigo_indicador_economico'] = isset($data['codigo_indicador_economico']) ? $data['codigo_indicador_economico'] : null;
        $this->container['numero_titulo_cedente_cobranca'] = isset($data['numero_titulo_cedente_cobranca']) ? $data['numero_titulo_cedente_cobranca'] : null;
        $this->container['codigo_tipo_juro_mora'] = isset($data['codigo_tipo_juro_mora']) ? $data['codigo_tipo_juro_mora'] : null;
        $this->container['data_emissao_titulo_cobranca'] = isset($data['data_emissao_titulo_cobranca']) ? $data['data_emissao_titulo_cobranca'] : null;
        $this->container['data_registro_titulo_cobranca'] = isset($data['data_registro_titulo_cobranca']) ? $data['data_registro_titulo_cobranca'] : null;
        $this->container['data_vencimento_titulo_cobranca'] = isset($data['data_vencimento_titulo_cobranca']) ? $data['data_vencimento_titulo_cobranca'] : null;
        $this->container['valor_original_titulo_cobranca'] = isset($data['valor_original_titulo_cobranca']) ? $data['valor_original_titulo_cobranca'] : null;
        $this->container['valor_atual_titulo_cobranca'] = isset($data['valor_atual_titulo_cobranca']) ? $data['valor_atual_titulo_cobranca'] : null;
        $this->container['valor_pagamento_parcial_titulo'] = isset($data['valor_pagamento_parcial_titulo']) ? $data['valor_pagamento_parcial_titulo'] : null;
        $this->container['valor_abatimento_titulo_cobranca'] = isset($data['valor_abatimento_titulo_cobranca']) ? $data['valor_abatimento_titulo_cobranca'] : null;
        $this->container['percentual_imposto_sobre_opr_financeiras_titulo_cobranca'] = isset($data['percentual_imposto_sobre_opr_financeiras_titulo_cobranca']) ? $data['percentual_imposto_sobre_opr_financeiras_titulo_cobranca'] : null;
        $this->container['valor_imposto_sobre_opr_financeiras_titulo_cobranca'] = isset($data['valor_imposto_sobre_opr_financeiras_titulo_cobranca']) ? $data['valor_imposto_sobre_opr_financeiras_titulo_cobranca'] : null;
        $this->container['valor_moeda_titulo_cobranca'] = isset($data['valor_moeda_titulo_cobranca']) ? $data['valor_moeda_titulo_cobranca'] : null;
        $this->container['percentual_juro_mora_titulo'] = isset($data['percentual_juro_mora_titulo']) ? $data['percentual_juro_mora_titulo'] : null;
        $this->container['valor_juro_mora_titulo'] = isset($data['valor_juro_mora_titulo']) ? $data['valor_juro_mora_titulo'] : null;
        $this->container['percentual_multa_titulo'] = isset($data['percentual_multa_titulo']) ? $data['percentual_multa_titulo'] : null;
        $this->container['valor_multa_titulo_cobranca'] = isset($data['valor_multa_titulo_cobranca']) ? $data['valor_multa_titulo_cobranca'] : null;
        $this->container['quantidade_parcela_titulo_cobranca'] = isset($data['quantidade_parcela_titulo_cobranca']) ? $data['quantidade_parcela_titulo_cobranca'] : null;
        $this->container['data_baixa_automatico_titulo'] = isset($data['data_baixa_automatico_titulo']) ? $data['data_baixa_automatico_titulo'] : null;
        $this->container['texto_campo_utilizacao_cedente'] = isset($data['texto_campo_utilizacao_cedente']) ? $data['texto_campo_utilizacao_cedente'] : null;
        $this->container['indicador_cobranca_partilhado_titulo'] = isset($data['indicador_cobranca_partilhado_titulo']) ? $data['indicador_cobranca_partilhado_titulo'] : null;
        $this->container['nome_sacado_cobranca'] = isset($data['nome_sacado_cobranca']) ? $data['nome_sacado_cobranca'] : null;
        $this->container['texto_endereco_sacado_cobranca'] = isset($data['texto_endereco_sacado_cobranca']) ? $data['texto_endereco_sacado_cobranca'] : null;
        $this->container['nome_bairro_sacado_cobranca'] = isset($data['nome_bairro_sacado_cobranca']) ? $data['nome_bairro_sacado_cobranca'] : null;
        $this->container['nome_municipio_sacado_cobranca'] = isset($data['nome_municipio_sacado_cobranca']) ? $data['nome_municipio_sacado_cobranca'] : null;
        $this->container['sigla_unidade_federacao_sacado_cobranca'] = isset($data['sigla_unidade_federacao_sacado_cobranca']) ? $data['sigla_unidade_federacao_sacado_cobranca'] : null;
        $this->container['numero_cep_sacado_cobranca'] = isset($data['numero_cep_sacado_cobranca']) ? $data['numero_cep_sacado_cobranca'] : null;
        $this->container['valor_moeda_abatimento_titulo'] = isset($data['valor_moeda_abatimento_titulo']) ? $data['valor_moeda_abatimento_titulo'] : null;
        $this->container['data_protesto_titulo_cobranca'] = isset($data['data_protesto_titulo_cobranca']) ? $data['data_protesto_titulo_cobranca'] : null;
        $this->container['codigo_tipo_inscricao_sacador'] = isset($data['codigo_tipo_inscricao_sacador']) ? $data['codigo_tipo_inscricao_sacador'] : null;
        $this->container['numero_inscricao_sacador_avalista'] = isset($data['numero_inscricao_sacador_avalista']) ? $data['numero_inscricao_sacador_avalista'] : null;
        $this->container['nome_sacador_avalista_titulo'] = isset($data['nome_sacador_avalista_titulo']) ? $data['nome_sacador_avalista_titulo'] : null;
        $this->container['percentual_desconto_titulo'] = isset($data['percentual_desconto_titulo']) ? $data['percentual_desconto_titulo'] : null;
        $this->container['data_desconto_titulo'] = isset($data['data_desconto_titulo']) ? $data['data_desconto_titulo'] : null;
        $this->container['valor_desconto_titulo'] = isset($data['valor_desconto_titulo']) ? $data['valor_desconto_titulo'] : null;
        $this->container['codigo_desconto_titulo'] = isset($data['codigo_desconto_titulo']) ? $data['codigo_desconto_titulo'] : null;
        $this->container['percentual_segundo_desconto_titulo'] = isset($data['percentual_segundo_desconto_titulo']) ? $data['percentual_segundo_desconto_titulo'] : null;
        $this->container['data_segundo_desconto_titulo'] = isset($data['data_segundo_desconto_titulo']) ? $data['data_segundo_desconto_titulo'] : null;
        $this->container['valor_segundo_desconto_titulo'] = isset($data['valor_segundo_desconto_titulo']) ? $data['valor_segundo_desconto_titulo'] : null;
        $this->container['codigo_segundo_desconto_titulo'] = isset($data['codigo_segundo_desconto_titulo']) ? $data['codigo_segundo_desconto_titulo'] : null;
        $this->container['percentual_terceiro_desconto_titulo'] = isset($data['percentual_terceiro_desconto_titulo']) ? $data['percentual_terceiro_desconto_titulo'] : null;
        $this->container['data_terceiro_desconto_titulo'] = isset($data['data_terceiro_desconto_titulo']) ? $data['data_terceiro_desconto_titulo'] : null;
        $this->container['valor_terceiro_desconto_titulo'] = isset($data['valor_terceiro_desconto_titulo']) ? $data['valor_terceiro_desconto_titulo'] : null;
        $this->container['codigo_terceiro_desconto_titulo'] = isset($data['codigo_terceiro_desconto_titulo']) ? $data['codigo_terceiro_desconto_titulo'] : null;
        $this->container['data_multa_titulo'] = isset($data['data_multa_titulo']) ? $data['data_multa_titulo'] : null;
        $this->container['numero_carteira_cobranca'] = isset($data['numero_carteira_cobranca']) ? $data['numero_carteira_cobranca'] : null;
        $this->container['numero_variacao_carteira_cobranca'] = isset($data['numero_variacao_carteira_cobranca']) ? $data['numero_variacao_carteira_cobranca'] : null;
        $this->container['quantidade_dia_protesto'] = isset($data['quantidade_dia_protesto']) ? $data['quantidade_dia_protesto'] : null;
        $this->container['quantidade_dia_prazo_limite_recebimento'] = isset($data['quantidade_dia_prazo_limite_recebimento']) ? $data['quantidade_dia_prazo_limite_recebimento'] : null;
        $this->container['data_limite_recebimento_titulo'] = isset($data['data_limite_recebimento_titulo']) ? $data['data_limite_recebimento_titulo'] : null;
        $this->container['indicador_permissao_recebimento_parcial'] = isset($data['indicador_permissao_recebimento_parcial']) ? $data['indicador_permissao_recebimento_parcial'] : null;
        $this->container['texto_codigo_barras_titulo_cobranca'] = isset($data['texto_codigo_barras_titulo_cobranca']) ? $data['texto_codigo_barras_titulo_cobranca'] : null;
        $this->container['codigo_ocorrencia_cartorio'] = isset($data['codigo_ocorrencia_cartorio']) ? $data['codigo_ocorrencia_cartorio'] : null;
        $this->container['valor_imposto_sobre_opr_financeiras_recebido_titulo'] = isset($data['valor_imposto_sobre_opr_financeiras_recebido_titulo']) ? $data['valor_imposto_sobre_opr_financeiras_recebido_titulo'] : null;
        $this->container['valor_abatimento_total'] = isset($data['valor_abatimento_total']) ? $data['valor_abatimento_total'] : null;
        $this->container['valor_juro_mora_recebido'] = isset($data['valor_juro_mora_recebido']) ? $data['valor_juro_mora_recebido'] : null;
        $this->container['valor_desconto_utilizado'] = isset($data['valor_desconto_utilizado']) ? $data['valor_desconto_utilizado'] : null;
        $this->container['valor_pago_sacado'] = isset($data['valor_pago_sacado']) ? $data['valor_pago_sacado'] : null;
        $this->container['valor_credito_cedente'] = isset($data['valor_credito_cedente']) ? $data['valor_credito_cedente'] : null;
        $this->container['codigo_tipo_liquidacao'] = isset($data['codigo_tipo_liquidacao']) ? $data['codigo_tipo_liquidacao'] : null;
        $this->container['data_credito_liquidacao'] = isset($data['data_credito_liquidacao']) ? $data['data_credito_liquidacao'] : null;
        $this->container['data_recebimento_titulo'] = isset($data['data_recebimento_titulo']) ? $data['data_recebimento_titulo'] : null;
        $this->container['codigo_prefixo_dependencia_recebedor'] = isset($data['codigo_prefixo_dependencia_recebedor']) ? $data['codigo_prefixo_dependencia_recebedor'] : null;
        $this->container['codigo_natureza_recebimento'] = isset($data['codigo_natureza_recebimento']) ? $data['codigo_natureza_recebimento'] : null;
        $this->container['numero_identidade_sacado_titulo_cobranca'] = isset($data['numero_identidade_sacado_titulo_cobranca']) ? $data['numero_identidade_sacado_titulo_cobranca'] : null;
        $this->container['codigo_responsavel_atualizacao'] = isset($data['codigo_responsavel_atualizacao']) ? $data['codigo_responsavel_atualizacao'] : null;
        $this->container['codigo_tipo_baixa_titulo'] = isset($data['codigo_tipo_baixa_titulo']) ? $data['codigo_tipo_baixa_titulo'] : null;
        $this->container['valor_multa_recebido'] = isset($data['valor_multa_recebido']) ? $data['valor_multa_recebido'] : null;
        $this->container['valor_reajuste'] = isset($data['valor_reajuste']) ? $data['valor_reajuste'] : null;
        $this->container['valor_outro_recebido'] = isset($data['valor_outro_recebido']) ? $data['valor_outro_recebido'] : null;
        $this->container['codigo_indicador_economico_utilizado_inadimplencia'] = isset($data['codigo_indicador_economico_utilizado_inadimplencia']) ? $data['codigo_indicador_economico_utilizado_inadimplencia'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets codigo_linha_digitavel
     *
     * @return string
     */
    public function getCodigoLinhaDigitavel()
    {
        return $this->container['codigo_linha_digitavel'];
    }

    /**
     * Sets codigo_linha_digitavel
     *
     * @param string $codigo_linha_digitavel Campo correpondente à linha digitável do boleto.
     *
     * @return $this
     */
    public function setCodigoLinhaDigitavel($codigo_linha_digitavel)
    {
        $this->container['codigo_linha_digitavel'] = $codigo_linha_digitavel;

        return $this;
    }

    /**
     * Gets texto_email_pagador
     *
     * @return string
     */
    public function getTextoEmailPagador()
    {
        return $this->container['texto_email_pagador'];
    }

    /**
     * Sets texto_email_pagador
     *
     * @param string $texto_email_pagador E-mail do Pagador.
     *
     * @return $this
     */
    public function setTextoEmailPagador($texto_email_pagador)
    {
        $this->container['texto_email_pagador'] = $texto_email_pagador;

        return $this;
    }

    /**
     * Gets texto_mensagem_bloqueto_titulo
     *
     * @return string
     */
    public function getTextoMensagemBloquetoTitulo()
    {
        return $this->container['texto_mensagem_bloqueto_titulo'];
    }

    /**
     * Sets texto_mensagem_bloqueto_titulo
     *
     * @param string $texto_mensagem_bloqueto_titulo Mensagem para ser impressa no boleto.
     *
     * @return $this
     */
    public function setTextoMensagemBloquetoTitulo($texto_mensagem_bloqueto_titulo)
    {
        $this->container['texto_mensagem_bloqueto_titulo'] = $texto_mensagem_bloqueto_titulo;

        return $this;
    }

    /**
     * Gets codigo_tipo_multa
     *
     * @return float
     */
    public function getCodigoTipoMulta()
    {
        return $this->container['codigo_tipo_multa'];
    }

    /**
     * Sets codigo_tipo_multa
     *
     * @param float $codigo_tipo_multa Código para identificação do tipo de multa para o Título de Cobrança.  Domínios: 0 - Sem multa 1 - Valor da Multa 2 - Percentual da Multa.
     *
     * @return $this
     */
    public function setCodigoTipoMulta($codigo_tipo_multa)
    {
        $this->container['codigo_tipo_multa'] = $codigo_tipo_multa;

        return $this;
    }

    /**
     * Gets codigo_canal_pagamento
     *
     * @return float
     */
    public function getCodigoCanalPagamento()
    {
        return $this->container['codigo_canal_pagamento'];
    }

    /**
     * Sets codigo_canal_pagamento
     *
     * @param float $codigo_canal_pagamento Código para identificação da forma de pagamento e do canal onde foi pago o boleto. Composto por 3 dígitos.  O primeiro dígito é: 1    Espécie 2    Débito em conta 3    Cartão de crédito 4    Cheque  Os dois últimos: 01 Agencias - Postos tradicionais 02 Terminal de Auto-atendimento 03 Internet (home / office banking) 05 Correspondente bancário 06 Central de atendimento(Call Center) 07 Arquivo Eletrônico 08 DDA 61 Pix
     *
     * @return $this
     */
    public function setCodigoCanalPagamento($codigo_canal_pagamento)
    {
        $this->container['codigo_canal_pagamento'] = $codigo_canal_pagamento;

        return $this;
    }

    /**
     * Gets numero_contrato_cobranca
     *
     * @return float
     */
    public function getNumeroContratoCobranca()
    {
        return $this->container['numero_contrato_cobranca'];
    }

    /**
     * Sets numero_contrato_cobranca
     *
     * @param float $numero_contrato_cobranca Código adotado pelo Banco para identificar o Contrato entre este e a Empresa Cliente.
     *
     * @return $this
     */
    public function setNumeroContratoCobranca($numero_contrato_cobranca)
    {
        $this->container['numero_contrato_cobranca'] = $numero_contrato_cobranca;

        return $this;
    }

    /**
     * Gets codigo_tipo_inscricao_sacado
     *
     * @return float
     */
    public function getCodigoTipoInscricaoSacado()
    {
        return $this->container['codigo_tipo_inscricao_sacado'];
    }

    /**
     * Sets codigo_tipo_inscricao_sacado
     *
     * @param float $codigo_tipo_inscricao_sacado Código que identifica o tipo de inscrição da Empresa ou Pessoa Física perante uma Instituição governamental.  Domínios:  1 - CPF  2 - CNPJ
     *
     * @return $this
     */
    public function setCodigoTipoInscricaoSacado($codigo_tipo_inscricao_sacado)
    {
        $this->container['codigo_tipo_inscricao_sacado'] = $codigo_tipo_inscricao_sacado;

        return $this;
    }

    /**
     * Gets numero_inscricao_sacado_cobranca
     *
     * @return float
     */
    public function getNumeroInscricaoSacadoCobranca()
    {
        return $this->container['numero_inscricao_sacado_cobranca'];
    }

    /**
     * Sets numero_inscricao_sacado_cobranca
     *
     * @param float $numero_inscricao_sacado_cobranca Número de inscrição da Empresa ou Pessoa Física perante uma Instituição governamental.
     *
     * @return $this
     */
    public function setNumeroInscricaoSacadoCobranca($numero_inscricao_sacado_cobranca)
    {
        $this->container['numero_inscricao_sacado_cobranca'] = $numero_inscricao_sacado_cobranca;

        return $this;
    }

    /**
     * Gets codigo_estado_titulo_cobranca
     *
     * @return float
     */
    public function getCodigoEstadoTituloCobranca()
    {
        return $this->container['codigo_estado_titulo_cobranca'];
    }

    /**
     * Sets codigo_estado_titulo_cobranca
     *
     * @param float $codigo_estado_titulo_cobranca Código da situação atual do boleto.  Domínios:  1 - NORMAL 2 - MOVIMENTO CARTORIO 3 - EM CARTORIO 4 - TITULO COM OCORRENCIA DE CARTORIO 5 - PROTESTADO ELETRONICO 6 - LIQUIDADO 7 - BAIXADO 8 - TITULO COM PENDENCIA DE CARTORIO 9 - TITULO PROTESTADO MANUAL 10 - TITULO BAIXADO/PAGO EM CARTORIO 11 - TITULO LIQUIDADO/PROTESTADO 12 - TITULO LIQUID/PGCRTO 13 - TITULO PROTESTADO AGUARDANDO BAIXA 14 - TITULO EM LIQUIDACAO 15 - TITULO AGENDADO 16 - TITULO CREDITADO 17 - PAGO EM CHEQUE - AGUARD.LIQUIDACAO 18 - PAGO PARCIALMENTE 19 - PAGO PARCIALMENTE CREDITADO  21 - TITULO AGENDADO COMPE 80 - EM PROCESSAMENTO (ESTADO TRANSITÓRIO)
     *
     * @return $this
     */
    public function setCodigoEstadoTituloCobranca($codigo_estado_titulo_cobranca)
    {
        $this->container['codigo_estado_titulo_cobranca'] = $codigo_estado_titulo_cobranca;

        return $this;
    }

    /**
     * Gets codigo_tipo_titulo_cobranca
     *
     * @return float
     */
    public function getCodigoTipoTituloCobranca()
    {
        return $this->container['codigo_tipo_titulo_cobranca'];
    }

    /**
     * Sets codigo_tipo_titulo_cobranca
     *
     * @param float $codigo_tipo_titulo_cobranca Código para identificar o tipo de boleto de cobrança.  Domínios:  1 - CHEQUE 2 - DUPLICATA MERCANTIL 3 - DUPLICATA MTIL POR INDICACAO 4 - DUPLICATA DE SERVICO 5 - DUPLICATA DE SRVC P/INDICACAO 6 - DUPLICATA RURAL 7 - LETRA DE CAMBIO 8 - NOTA DE CREDITO COMERCIAL 9 - NOTA DE CREDITO A EXPORTACAO 10 - NOTA DE CREDITO INDULTRIAL 11 - NOTA DE CREDITO RURAL 12 - NOTA PROMISSORIA 13 - NOTA PROMISSORIA RURAL 14 - TRIPLICATA MERCANTIL 15 - TRIPLICATA DE SERVICO 16 - NOTA DE SEGURO 17 - RECIBO 18 - FATURA 19 - NOTA DE DEBITO 20 - APOLICE DE SEGURO 21 - MENSALIDADE ESCOLAR 22 - PARCELA DE CONSORCIO 23 - DIVIDA ATIVA DA UNIAO 24 - DIVIDA ATIVA DE ESTADO 25 - DIVIDA ATIVA DE MUNICIPIO 31 - CARTAO DE CREDITO 32  - BOLETO PROPOSTA 99 - OUTROS
     *
     * @return $this
     */
    public function setCodigoTipoTituloCobranca($codigo_tipo_titulo_cobranca)
    {
        $this->container['codigo_tipo_titulo_cobranca'] = $codigo_tipo_titulo_cobranca;

        return $this;
    }

    /**
     * Gets codigo_modalidade_titulo
     *
     * @return float
     */
    public function getCodigoModalidadeTitulo()
    {
        return $this->container['codigo_modalidade_titulo'];
    }

    /**
     * Sets codigo_modalidade_titulo
     *
     * @param float $codigo_modalidade_titulo Código para identificar a característica dos boletos dentro das modalidades de cobrança existentes no BB.  Domínios:  1 - SIMPLES COM REGISTRO  2 - SIMPLES SEM REGISTRO  4 - VINCULADA  6 - DESCONTADA  8 - FINANCIADA VENDOR
     *
     * @return $this
     */
    public function setCodigoModalidadeTitulo($codigo_modalidade_titulo)
    {
        $this->container['codigo_modalidade_titulo'] = $codigo_modalidade_titulo;

        return $this;
    }

    /**
     * Gets codigo_aceite_titulo_cobranca
     *
     * @return string
     */
    public function getCodigoAceiteTituloCobranca()
    {
        return $this->container['codigo_aceite_titulo_cobranca'];
    }

    /**
     * Sets codigo_aceite_titulo_cobranca
     *
     * @param string $codigo_aceite_titulo_cobranca Código para  identificar se o boleto de cobrança foi aceito (reconhecimento da dívida pelo Pagador).  Domínios:  A - ACEITE N - NAO ACEITE
     *
     * @return $this
     */
    public function setCodigoAceiteTituloCobranca($codigo_aceite_titulo_cobranca)
    {
        $this->container['codigo_aceite_titulo_cobranca'] = $codigo_aceite_titulo_cobranca;

        return $this;
    }

    /**
     * Gets codigo_prefixo_dependencia_cobrador
     *
     * @return float
     */
    public function getCodigoPrefixoDependenciaCobrador()
    {
        return $this->container['codigo_prefixo_dependencia_cobrador'];
    }

    /**
     * Sets codigo_prefixo_dependencia_cobrador
     *
     * @param float $codigo_prefixo_dependencia_cobrador Código agência da praça do pagador (endereço).
     *
     * @return $this
     */
    public function setCodigoPrefixoDependenciaCobrador($codigo_prefixo_dependencia_cobrador)
    {
        $this->container['codigo_prefixo_dependencia_cobrador'] = $codigo_prefixo_dependencia_cobrador;

        return $this;
    }

    /**
     * Gets codigo_indicador_economico
     *
     * @return float
     */
    public function getCodigoIndicadorEconomico()
    {
        return $this->container['codigo_indicador_economico'];
    }

    /**
     * Sets codigo_indicador_economico
     *
     * @param float $codigo_indicador_economico Código para identificar a moeda referenciada no boleto.  Domínios: 0 - NENHUM 1 - FAJTR 2 - DOLAR 3 - EURO 4 - IENE 5 - MARCO ALEMAO 6 - FTR 7 - IDTR 8 - UFIR 9 - REAL 10 - SELIC 11 - IGP-M 12 - INPC 13 - TR (BESC)
     *
     * @return $this
     */
    public function setCodigoIndicadorEconomico($codigo_indicador_economico)
    {
        $this->container['codigo_indicador_economico'] = $codigo_indicador_economico;

        return $this;
    }

    /**
     * Gets numero_titulo_cedente_cobranca
     *
     * @return string
     */
    public function getNumeroTituloCedenteCobranca()
    {
        return $this->container['numero_titulo_cedente_cobranca'];
    }

    /**
     * Sets numero_titulo_cedente_cobranca
     *
     * @param string $numero_titulo_cedente_cobranca Campo destinado para uso da Empresa Beneficiário para identificação do boleto. Equivalente ao SEU NÚMERO ou ao numeroTituloBeneficiario do request do registro
     *
     * @return $this
     */
    public function setNumeroTituloCedenteCobranca($numero_titulo_cedente_cobranca)
    {
        $this->container['numero_titulo_cedente_cobranca'] = $numero_titulo_cedente_cobranca;

        return $this;
    }

    /**
     * Gets codigo_tipo_juro_mora
     *
     * @return float
     */
    public function getCodigoTipoJuroMora()
    {
        return $this->container['codigo_tipo_juro_mora'];
    }

    /**
     * Sets codigo_tipo_juro_mora
     *
     * @param float $codigo_tipo_juro_mora Código utilizado pela FEBRABAN para identificar o tipo de taxa de juros.  Domínios: 0 - DISPENSAR 1 - VALOR DIA ATRASO 2 - TAXA MENSAL 3 - ISENTO
     *
     * @return $this
     */
    public function setCodigoTipoJuroMora($codigo_tipo_juro_mora)
    {
        $this->container['codigo_tipo_juro_mora'] = $codigo_tipo_juro_mora;

        return $this;
    }

    /**
     * Gets data_emissao_titulo_cobranca
     *
     * @return string
     */
    public function getDataEmissaoTituloCobranca()
    {
        return $this->container['data_emissao_titulo_cobranca'];
    }

    /**
     * Sets data_emissao_titulo_cobranca
     *
     * @param string $data_emissao_titulo_cobranca Data de emissão do boleto.
     *
     * @return $this
     */
    public function setDataEmissaoTituloCobranca($data_emissao_titulo_cobranca)
    {
        $this->container['data_emissao_titulo_cobranca'] = $data_emissao_titulo_cobranca;

        return $this;
    }

    /**
     * Gets data_registro_titulo_cobranca
     *
     * @return string
     */
    public function getDataRegistroTituloCobranca()
    {
        return $this->container['data_registro_titulo_cobranca'];
    }

    /**
     * Sets data_registro_titulo_cobranca
     *
     * @param string $data_registro_titulo_cobranca Data de registro do boleto.
     *
     * @return $this
     */
    public function setDataRegistroTituloCobranca($data_registro_titulo_cobranca)
    {
        $this->container['data_registro_titulo_cobranca'] = $data_registro_titulo_cobranca;

        return $this;
    }

    /**
     * Gets data_vencimento_titulo_cobranca
     *
     * @return string
     */
    public function getDataVencimentoTituloCobranca()
    {
        return $this->container['data_vencimento_titulo_cobranca'];
    }

    /**
     * Sets data_vencimento_titulo_cobranca
     *
     * @param string $data_vencimento_titulo_cobranca Data de vencimento do boleto.
     *
     * @return $this
     */
    public function setDataVencimentoTituloCobranca($data_vencimento_titulo_cobranca)
    {
        $this->container['data_vencimento_titulo_cobranca'] = $data_vencimento_titulo_cobranca;

        return $this;
    }

    /**
     * Gets valor_original_titulo_cobranca
     *
     * @return float
     */
    public function getValorOriginalTituloCobranca()
    {
        return $this->container['valor_original_titulo_cobranca'];
    }

    /**
     * Sets valor_original_titulo_cobranca
     *
     * @param float $valor_original_titulo_cobranca Valor original do boleto indicado quando do registro.
     *
     * @return $this
     */
    public function setValorOriginalTituloCobranca($valor_original_titulo_cobranca)
    {
        $this->container['valor_original_titulo_cobranca'] = $valor_original_titulo_cobranca;

        return $this;
    }

    /**
     * Gets valor_atual_titulo_cobranca
     *
     * @return float
     */
    public function getValorAtualTituloCobranca()
    {
        return $this->container['valor_atual_titulo_cobranca'];
    }

    /**
     * Sets valor_atual_titulo_cobranca
     *
     * @param float $valor_atual_titulo_cobranca Valor atualizado do boleto, considerando possíveis abatimento e pagamento parcial, que incidem sob o valor original
     *
     * @return $this
     */
    public function setValorAtualTituloCobranca($valor_atual_titulo_cobranca)
    {
        $this->container['valor_atual_titulo_cobranca'] = $valor_atual_titulo_cobranca;

        return $this;
    }

    /**
     * Gets valor_pagamento_parcial_titulo
     *
     * @return float
     */
    public function getValorPagamentoParcialTitulo()
    {
        return $this->container['valor_pagamento_parcial_titulo'];
    }

    /**
     * Sets valor_pagamento_parcial_titulo
     *
     * @param float $valor_pagamento_parcial_titulo Valores já recebidos em pagamentos parciais.
     *
     * @return $this
     */
    public function setValorPagamentoParcialTitulo($valor_pagamento_parcial_titulo)
    {
        $this->container['valor_pagamento_parcial_titulo'] = $valor_pagamento_parcial_titulo;

        return $this;
    }

    /**
     * Gets valor_abatimento_titulo_cobranca
     *
     * @return float
     */
    public function getValorAbatimentoTituloCobranca()
    {
        return $this->container['valor_abatimento_titulo_cobranca'];
    }

    /**
     * Sets valor_abatimento_titulo_cobranca
     *
     * @param float $valor_abatimento_titulo_cobranca Valor do abatimento (redução do valor do documento, devido a algum problema), expresso em moeda corrente.
     *
     * @return $this
     */
    public function setValorAbatimentoTituloCobranca($valor_abatimento_titulo_cobranca)
    {
        $this->container['valor_abatimento_titulo_cobranca'] = $valor_abatimento_titulo_cobranca;

        return $this;
    }

    /**
     * Gets percentual_imposto_sobre_opr_financeiras_titulo_cobranca
     *
     * @return float
     */
    public function getPercentualImpostoSobreOprFinanceirasTituloCobranca()
    {
        return $this->container['percentual_imposto_sobre_opr_financeiras_titulo_cobranca'];
    }

    /**
     * Sets percentual_imposto_sobre_opr_financeiras_titulo_cobranca
     *
     * @param float $percentual_imposto_sobre_opr_financeiras_titulo_cobranca Percentual do IOF - Imposto sobre Operações Financeiras - de um boleto prêmio de seguro na sua data de emissão, expresso de acordo com o tipo de moeda.
     *
     * @return $this
     */
    public function setPercentualImpostoSobreOprFinanceirasTituloCobranca($percentual_imposto_sobre_opr_financeiras_titulo_cobranca)
    {
        $this->container['percentual_imposto_sobre_opr_financeiras_titulo_cobranca'] = $percentual_imposto_sobre_opr_financeiras_titulo_cobranca;

        return $this;
    }

    /**
     * Gets valor_imposto_sobre_opr_financeiras_titulo_cobranca
     *
     * @return float
     */
    public function getValorImpostoSobreOprFinanceirasTituloCobranca()
    {
        return $this->container['valor_imposto_sobre_opr_financeiras_titulo_cobranca'];
    }

    /**
     * Sets valor_imposto_sobre_opr_financeiras_titulo_cobranca
     *
     * @param float $valor_imposto_sobre_opr_financeiras_titulo_cobranca Valor do IOF - Imposto sobre Operações Financeiras - de um boleto prêmio de seguro na sua data de emissão, expresso de acordo com o tipo de moeda.
     *
     * @return $this
     */
    public function setValorImpostoSobreOprFinanceirasTituloCobranca($valor_imposto_sobre_opr_financeiras_titulo_cobranca)
    {
        $this->container['valor_imposto_sobre_opr_financeiras_titulo_cobranca'] = $valor_imposto_sobre_opr_financeiras_titulo_cobranca;

        return $this;
    }

    /**
     * Gets valor_moeda_titulo_cobranca
     *
     * @return float
     */
    public function getValorMoedaTituloCobranca()
    {
        return $this->container['valor_moeda_titulo_cobranca'];
    }

    /**
     * Sets valor_moeda_titulo_cobranca
     *
     * @param float $valor_moeda_titulo_cobranca Valor do boleto expresso em moeda variável.
     *
     * @return $this
     */
    public function setValorMoedaTituloCobranca($valor_moeda_titulo_cobranca)
    {
        $this->container['valor_moeda_titulo_cobranca'] = $valor_moeda_titulo_cobranca;

        return $this;
    }

    /**
     * Gets percentual_juro_mora_titulo
     *
     * @return float
     */
    public function getPercentualJuroMoraTitulo()
    {
        return $this->container['percentual_juro_mora_titulo'];
    }

    /**
     * Sets percentual_juro_mora_titulo
     *
     * @param float $percentual_juro_mora_titulo Porcentagem sobre o valor do boleto a ser cobrada de juros de mora.
     *
     * @return $this
     */
    public function setPercentualJuroMoraTitulo($percentual_juro_mora_titulo)
    {
        $this->container['percentual_juro_mora_titulo'] = $percentual_juro_mora_titulo;

        return $this;
    }

    /**
     * Gets valor_juro_mora_titulo
     *
     * @return float
     */
    public function getValorJuroMoraTitulo()
    {
        return $this->container['valor_juro_mora_titulo'];
    }

    /**
     * Sets valor_juro_mora_titulo
     *
     * @param float $valor_juro_mora_titulo Valor  sobre o valor do boleto a ser cobrado de juros de mora.
     *
     * @return $this
     */
    public function setValorJuroMoraTitulo($valor_juro_mora_titulo)
    {
        $this->container['valor_juro_mora_titulo'] = $valor_juro_mora_titulo;

        return $this;
    }

    /**
     * Gets percentual_multa_titulo
     *
     * @return float
     */
    public function getPercentualMultaTitulo()
    {
        return $this->container['percentual_multa_titulo'];
    }

    /**
     * Sets percentual_multa_titulo
     *
     * @param float $percentual_multa_titulo Porcentagem sobre o valor do boleto a ser cobrada de multa.
     *
     * @return $this
     */
    public function setPercentualMultaTitulo($percentual_multa_titulo)
    {
        $this->container['percentual_multa_titulo'] = $percentual_multa_titulo;

        return $this;
    }

    /**
     * Gets valor_multa_titulo_cobranca
     *
     * @return float
     */
    public function getValorMultaTituloCobranca()
    {
        return $this->container['valor_multa_titulo_cobranca'];
    }

    /**
     * Sets valor_multa_titulo_cobranca
     *
     * @param float $valor_multa_titulo_cobranca Valor  sobre o valor do boleto a ser cobrado de multa.
     *
     * @return $this
     */
    public function setValorMultaTituloCobranca($valor_multa_titulo_cobranca)
    {
        $this->container['valor_multa_titulo_cobranca'] = $valor_multa_titulo_cobranca;

        return $this;
    }

    /**
     * Gets quantidade_parcela_titulo_cobranca
     *
     * @return float
     */
    public function getQuantidadeParcelaTituloCobranca()
    {
        return $this->container['quantidade_parcela_titulo_cobranca'];
    }

    /**
     * Sets quantidade_parcela_titulo_cobranca
     *
     * @param float $quantidade_parcela_titulo_cobranca Quantidade de parcela do boleto.
     *
     * @return $this
     */
    public function setQuantidadeParcelaTituloCobranca($quantidade_parcela_titulo_cobranca)
    {
        $this->container['quantidade_parcela_titulo_cobranca'] = $quantidade_parcela_titulo_cobranca;

        return $this;
    }

    /**
     * Gets data_baixa_automatico_titulo
     *
     * @return string
     */
    public function getDataBaixaAutomaticoTitulo()
    {
        return $this->container['data_baixa_automatico_titulo'];
    }

    /**
     * Sets data_baixa_automatico_titulo
     *
     * @param string $data_baixa_automatico_titulo Data da baixa automática do boleto, conforme cadastrado no convênio.
     *
     * @return $this
     */
    public function setDataBaixaAutomaticoTitulo($data_baixa_automatico_titulo)
    {
        $this->container['data_baixa_automatico_titulo'] = $data_baixa_automatico_titulo;

        return $this;
    }

    /**
     * Gets texto_campo_utilizacao_cedente
     *
     * @return string
     */
    public function getTextoCampoUtilizacaoCedente()
    {
        return $this->container['texto_campo_utilizacao_cedente'];
    }

    /**
     * Sets texto_campo_utilizacao_cedente
     *
     * @param string $texto_campo_utilizacao_cedente Texto de observações destinado ao envio de mensagens livres, a serem impressas no campo de instruções da ficha de compensação do Boleto de Pagamento.
     *
     * @return $this
     */
    public function setTextoCampoUtilizacaoCedente($texto_campo_utilizacao_cedente)
    {
        $this->container['texto_campo_utilizacao_cedente'] = $texto_campo_utilizacao_cedente;

        return $this;
    }

    /**
     * Gets indicador_cobranca_partilhado_titulo
     *
     * @return string
     */
    public function getIndicadorCobrancaPartilhadoTitulo()
    {
        return $this->container['indicador_cobranca_partilhado_titulo'];
    }

    /**
     * Sets indicador_cobranca_partilhado_titulo
     *
     * @param string $indicador_cobranca_partilhado_titulo Código para identificação de Rateio de Crédito (partilhamento).  Domínios:  S - SIM  N - NÃO
     *
     * @return $this
     */
    public function setIndicadorCobrancaPartilhadoTitulo($indicador_cobranca_partilhado_titulo)
    {
        $this->container['indicador_cobranca_partilhado_titulo'] = $indicador_cobranca_partilhado_titulo;

        return $this;
    }

    /**
     * Gets nome_sacado_cobranca
     *
     * @return string
     */
    public function getNomeSacadoCobranca()
    {
        return $this->container['nome_sacado_cobranca'];
    }

    /**
     * Sets nome_sacado_cobranca
     *
     * @param string $nome_sacado_cobranca Nome que identifica a pessoa, física ou jurídica, a qual se quer fazer referência.
     *
     * @return $this
     */
    public function setNomeSacadoCobranca($nome_sacado_cobranca)
    {
        $this->container['nome_sacado_cobranca'] = $nome_sacado_cobranca;

        return $this;
    }

    /**
     * Gets texto_endereco_sacado_cobranca
     *
     * @return string
     */
    public function getTextoEnderecoSacadoCobranca()
    {
        return $this->container['texto_endereco_sacado_cobranca'];
    }

    /**
     * Sets texto_endereco_sacado_cobranca
     *
     * @param string $texto_endereco_sacado_cobranca Texto referente a localização da rua/avenida, número, complemento para entrega de correspondência.
     *
     * @return $this
     */
    public function setTextoEnderecoSacadoCobranca($texto_endereco_sacado_cobranca)
    {
        $this->container['texto_endereco_sacado_cobranca'] = $texto_endereco_sacado_cobranca;

        return $this;
    }

    /**
     * Gets nome_bairro_sacado_cobranca
     *
     * @return string
     */
    public function getNomeBairroSacadoCobranca()
    {
        return $this->container['nome_bairro_sacado_cobranca'];
    }

    /**
     * Sets nome_bairro_sacado_cobranca
     *
     * @param string $nome_bairro_sacado_cobranca Texto referente ao bairro para entrega de correspondência.
     *
     * @return $this
     */
    public function setNomeBairroSacadoCobranca($nome_bairro_sacado_cobranca)
    {
        $this->container['nome_bairro_sacado_cobranca'] = $nome_bairro_sacado_cobranca;

        return $this;
    }

    /**
     * Gets nome_municipio_sacado_cobranca
     *
     * @return string
     */
    public function getNomeMunicipioSacadoCobranca()
    {
        return $this->container['nome_municipio_sacado_cobranca'];
    }

    /**
     * Sets nome_municipio_sacado_cobranca
     *
     * @param string $nome_municipio_sacado_cobranca Texto referente ao nome do município componente do endereço utilizado para entrega de correspondência.
     *
     * @return $this
     */
    public function setNomeMunicipioSacadoCobranca($nome_municipio_sacado_cobranca)
    {
        $this->container['nome_municipio_sacado_cobranca'] = $nome_municipio_sacado_cobranca;

        return $this;
    }

    /**
     * Gets sigla_unidade_federacao_sacado_cobranca
     *
     * @return string
     */
    public function getSiglaUnidadeFederacaoSacadoCobranca()
    {
        return $this->container['sigla_unidade_federacao_sacado_cobranca'];
    }

    /**
     * Sets sigla_unidade_federacao_sacado_cobranca
     *
     * @param string $sigla_unidade_federacao_sacado_cobranca Código do estado, unidade da federação componente do endereço utilizado para entrega de correspondência.
     *
     * @return $this
     */
    public function setSiglaUnidadeFederacaoSacadoCobranca($sigla_unidade_federacao_sacado_cobranca)
    {
        $this->container['sigla_unidade_federacao_sacado_cobranca'] = $sigla_unidade_federacao_sacado_cobranca;

        return $this;
    }

    /**
     * Gets numero_cep_sacado_cobranca
     *
     * @return float
     */
    public function getNumeroCepSacadoCobranca()
    {
        return $this->container['numero_cep_sacado_cobranca'];
    }

    /**
     * Sets numero_cep_sacado_cobranca
     *
     * @param float $numero_cep_sacado_cobranca Código adotado pelos Correios, para identificação de logradouros.
     *
     * @return $this
     */
    public function setNumeroCepSacadoCobranca($numero_cep_sacado_cobranca)
    {
        $this->container['numero_cep_sacado_cobranca'] = $numero_cep_sacado_cobranca;

        return $this;
    }

    /**
     * Gets valor_moeda_abatimento_titulo
     *
     * @return float
     */
    public function getValorMoedaAbatimentoTitulo()
    {
        return $this->container['valor_moeda_abatimento_titulo'];
    }

    /**
     * Sets valor_moeda_abatimento_titulo
     *
     * @param float $valor_moeda_abatimento_titulo Valor da moeda do abatimento.
     *
     * @return $this
     */
    public function setValorMoedaAbatimentoTitulo($valor_moeda_abatimento_titulo)
    {
        $this->container['valor_moeda_abatimento_titulo'] = $valor_moeda_abatimento_titulo;

        return $this;
    }

    /**
     * Gets data_protesto_titulo_cobranca
     *
     * @return string
     */
    public function getDataProtestoTituloCobranca()
    {
        return $this->container['data_protesto_titulo_cobranca'];
    }

    /**
     * Sets data_protesto_titulo_cobranca
     *
     * @param string $data_protesto_titulo_cobranca Data para inicialização do processo de cobrança via protesto.
     *
     * @return $this
     */
    public function setDataProtestoTituloCobranca($data_protesto_titulo_cobranca)
    {
        $this->container['data_protesto_titulo_cobranca'] = $data_protesto_titulo_cobranca;

        return $this;
    }

    /**
     * Gets codigo_tipo_inscricao_sacador
     *
     * @return float
     */
    public function getCodigoTipoInscricaoSacador()
    {
        return $this->container['codigo_tipo_inscricao_sacador'];
    }

    /**
     * Sets codigo_tipo_inscricao_sacador
     *
     * @param float $codigo_tipo_inscricao_sacador Código que identifica o tipo de inscrição do Beneficiário original do boleto de cobrança.  Domínios:  1 - CPF  2 - CNPJ
     *
     * @return $this
     */
    public function setCodigoTipoInscricaoSacador($codigo_tipo_inscricao_sacador)
    {
        $this->container['codigo_tipo_inscricao_sacador'] = $codigo_tipo_inscricao_sacador;

        return $this;
    }

    /**
     * Gets numero_inscricao_sacador_avalista
     *
     * @return float
     */
    public function getNumeroInscricaoSacadorAvalista()
    {
        return $this->container['numero_inscricao_sacador_avalista'];
    }

    /**
     * Sets numero_inscricao_sacador_avalista
     *
     * @param float $numero_inscricao_sacador_avalista Número de inscrição do Beneficiário original do boleto de cobrança.
     *
     * @return $this
     */
    public function setNumeroInscricaoSacadorAvalista($numero_inscricao_sacador_avalista)
    {
        $this->container['numero_inscricao_sacador_avalista'] = $numero_inscricao_sacador_avalista;

        return $this;
    }

    /**
     * Gets nome_sacador_avalista_titulo
     *
     * @return string
     */
    public function getNomeSacadorAvalistaTitulo()
    {
        return $this->container['nome_sacador_avalista_titulo'];
    }

    /**
     * Sets nome_sacador_avalista_titulo
     *
     * @param string $nome_sacador_avalista_titulo Nome que identifica a entidade, pessoa física ou jurídica, Beneficiário original do boleto de cobrança.
     *
     * @return $this
     */
    public function setNomeSacadorAvalistaTitulo($nome_sacador_avalista_titulo)
    {
        $this->container['nome_sacador_avalista_titulo'] = $nome_sacador_avalista_titulo;

        return $this;
    }

    /**
     * Gets percentual_desconto_titulo
     *
     * @return float
     */
    public function getPercentualDescontoTitulo()
    {
        return $this->container['percentual_desconto_titulo'];
    }

    /**
     * Sets percentual_desconto_titulo
     *
     * @param float $percentual_desconto_titulo Percentual de desconto a ser concedido sobre o boleto de cobrança.
     *
     * @return $this
     */
    public function setPercentualDescontoTitulo($percentual_desconto_titulo)
    {
        $this->container['percentual_desconto_titulo'] = $percentual_desconto_titulo;

        return $this;
    }

    /**
     * Gets data_desconto_titulo
     *
     * @return string
     */
    public function getDataDescontoTitulo()
    {
        return $this->container['data_desconto_titulo'];
    }

    /**
     * Sets data_desconto_titulo
     *
     * @param string $data_desconto_titulo Data limite do desconto do boleto de cobrança.
     *
     * @return $this
     */
    public function setDataDescontoTitulo($data_desconto_titulo)
    {
        $this->container['data_desconto_titulo'] = $data_desconto_titulo;

        return $this;
    }

    /**
     * Gets valor_desconto_titulo
     *
     * @return float
     */
    public function getValorDescontoTitulo()
    {
        return $this->container['valor_desconto_titulo'];
    }

    /**
     * Sets valor_desconto_titulo
     *
     * @param float $valor_desconto_titulo Valor de desconto a ser concedido sobre o boleto de cobrança.
     *
     * @return $this
     */
    public function setValorDescontoTitulo($valor_desconto_titulo)
    {
        $this->container['valor_desconto_titulo'] = $valor_desconto_titulo;

        return $this;
    }

    /**
     * Gets codigo_desconto_titulo
     *
     * @return float
     */
    public function getCodigoDescontoTitulo()
    {
        return $this->container['codigo_desconto_titulo'];
    }

    /**
     * Sets codigo_desconto_titulo
     *
     * @param float $codigo_desconto_titulo Código para identificação do tipo de desconto que deverá ser concedido.  Domínios:  0 - SEM DESCONTO  1 - VLR FIXO ATE A DATA INFORMADA  2 - PERCENTUAL ATE A DATA INFORMADA  3 - DESCONTO POR DIA DE ANTECIPACAO
     *
     * @return $this
     */
    public function setCodigoDescontoTitulo($codigo_desconto_titulo)
    {
        $this->container['codigo_desconto_titulo'] = $codigo_desconto_titulo;

        return $this;
    }

    /**
     * Gets percentual_segundo_desconto_titulo
     *
     * @return float
     */
    public function getPercentualSegundoDescontoTitulo()
    {
        return $this->container['percentual_segundo_desconto_titulo'];
    }

    /**
     * Sets percentual_segundo_desconto_titulo
     *
     * @param float $percentual_segundo_desconto_titulo Percentual do segundo desconto a ser concedido sobre o boleto de cobrança.
     *
     * @return $this
     */
    public function setPercentualSegundoDescontoTitulo($percentual_segundo_desconto_titulo)
    {
        $this->container['percentual_segundo_desconto_titulo'] = $percentual_segundo_desconto_titulo;

        return $this;
    }

    /**
     * Gets data_segundo_desconto_titulo
     *
     * @return string
     */
    public function getDataSegundoDescontoTitulo()
    {
        return $this->container['data_segundo_desconto_titulo'];
    }

    /**
     * Sets data_segundo_desconto_titulo
     *
     * @param string $data_segundo_desconto_titulo Data limite do segundo desconto do boleto de cobrança.
     *
     * @return $this
     */
    public function setDataSegundoDescontoTitulo($data_segundo_desconto_titulo)
    {
        $this->container['data_segundo_desconto_titulo'] = $data_segundo_desconto_titulo;

        return $this;
    }

    /**
     * Gets valor_segundo_desconto_titulo
     *
     * @return float
     */
    public function getValorSegundoDescontoTitulo()
    {
        return $this->container['valor_segundo_desconto_titulo'];
    }

    /**
     * Sets valor_segundo_desconto_titulo
     *
     * @param float $valor_segundo_desconto_titulo Valor do segundo desconto a ser concedido sobre o boleto de cobrança.
     *
     * @return $this
     */
    public function setValorSegundoDescontoTitulo($valor_segundo_desconto_titulo)
    {
        $this->container['valor_segundo_desconto_titulo'] = $valor_segundo_desconto_titulo;

        return $this;
    }

    /**
     * Gets codigo_segundo_desconto_titulo
     *
     * @return float
     */
    public function getCodigoSegundoDescontoTitulo()
    {
        return $this->container['codigo_segundo_desconto_titulo'];
    }

    /**
     * Sets codigo_segundo_desconto_titulo
     *
     * @param float $codigo_segundo_desconto_titulo Código para identificação do tipo do segundo desconto que deverá ser concedido.  Domínios:  0 - SEM DESCONTO  1 - VLR FIXO ATE A DATA INFORMADA  2 - PERCENTUAL ATE A DATA INFORMADA  3 - DESCONTO POR DIA DE ANTECIPACAO
     *
     * @return $this
     */
    public function setCodigoSegundoDescontoTitulo($codigo_segundo_desconto_titulo)
    {
        $this->container['codigo_segundo_desconto_titulo'] = $codigo_segundo_desconto_titulo;

        return $this;
    }

    /**
     * Gets percentual_terceiro_desconto_titulo
     *
     * @return float
     */
    public function getPercentualTerceiroDescontoTitulo()
    {
        return $this->container['percentual_terceiro_desconto_titulo'];
    }

    /**
     * Sets percentual_terceiro_desconto_titulo
     *
     * @param float $percentual_terceiro_desconto_titulo Percentual do terceiro desconto a ser concedido sobre o boleto de cobrança.
     *
     * @return $this
     */
    public function setPercentualTerceiroDescontoTitulo($percentual_terceiro_desconto_titulo)
    {
        $this->container['percentual_terceiro_desconto_titulo'] = $percentual_terceiro_desconto_titulo;

        return $this;
    }

    /**
     * Gets data_terceiro_desconto_titulo
     *
     * @return string
     */
    public function getDataTerceiroDescontoTitulo()
    {
        return $this->container['data_terceiro_desconto_titulo'];
    }

    /**
     * Sets data_terceiro_desconto_titulo
     *
     * @param string $data_terceiro_desconto_titulo Data limite do terceiro desconto do boleto de cobrança.
     *
     * @return $this
     */
    public function setDataTerceiroDescontoTitulo($data_terceiro_desconto_titulo)
    {
        $this->container['data_terceiro_desconto_titulo'] = $data_terceiro_desconto_titulo;

        return $this;
    }

    /**
     * Gets valor_terceiro_desconto_titulo
     *
     * @return float
     */
    public function getValorTerceiroDescontoTitulo()
    {
        return $this->container['valor_terceiro_desconto_titulo'];
    }

    /**
     * Sets valor_terceiro_desconto_titulo
     *
     * @param float $valor_terceiro_desconto_titulo Valor do terceiro desconto a ser concedido sobre o boleto de cobrança.
     *
     * @return $this
     */
    public function setValorTerceiroDescontoTitulo($valor_terceiro_desconto_titulo)
    {
        $this->container['valor_terceiro_desconto_titulo'] = $valor_terceiro_desconto_titulo;

        return $this;
    }

    /**
     * Gets codigo_terceiro_desconto_titulo
     *
     * @return float
     */
    public function getCodigoTerceiroDescontoTitulo()
    {
        return $this->container['codigo_terceiro_desconto_titulo'];
    }

    /**
     * Sets codigo_terceiro_desconto_titulo
     *
     * @param float $codigo_terceiro_desconto_titulo Código para identificação do tipo do terceiro desconto que deverá ser concedido.  Domínios:  0 - SEM DESCONTO  1 - VLR FIXO ATE A DATA INFORMADA  2 - PERCENTUAL ATE A DATA INFORMADA  3 - DESCONTO POR DIA DE ANTECIPACAO
     *
     * @return $this
     */
    public function setCodigoTerceiroDescontoTitulo($codigo_terceiro_desconto_titulo)
    {
        $this->container['codigo_terceiro_desconto_titulo'] = $codigo_terceiro_desconto_titulo;

        return $this;
    }

    /**
     * Gets data_multa_titulo
     *
     * @return string
     */
    public function getDataMultaTitulo()
    {
        return $this->container['data_multa_titulo'];
    }

    /**
     * Sets data_multa_titulo
     *
     * @param string $data_multa_titulo Data para início da cobrança da multa.
     *
     * @return $this
     */
    public function setDataMultaTitulo($data_multa_titulo)
    {
        $this->container['data_multa_titulo'] = $data_multa_titulo;

        return $this;
    }

    /**
     * Gets numero_carteira_cobranca
     *
     * @return float
     */
    public function getNumeroCarteiraCobranca()
    {
        return $this->container['numero_carteira_cobranca'];
    }

    /**
     * Sets numero_carteira_cobranca
     *
     * @param float $numero_carteira_cobranca Número da carteira do convênio de cobrança.
     *
     * @return $this
     */
    public function setNumeroCarteiraCobranca($numero_carteira_cobranca)
    {
        $this->container['numero_carteira_cobranca'] = $numero_carteira_cobranca;

        return $this;
    }

    /**
     * Gets numero_variacao_carteira_cobranca
     *
     * @return float
     */
    public function getNumeroVariacaoCarteiraCobranca()
    {
        return $this->container['numero_variacao_carteira_cobranca'];
    }

    /**
     * Sets numero_variacao_carteira_cobranca
     *
     * @param float $numero_variacao_carteira_cobranca Número da variação da carteira do convênio de cobrança.
     *
     * @return $this
     */
    public function setNumeroVariacaoCarteiraCobranca($numero_variacao_carteira_cobranca)
    {
        $this->container['numero_variacao_carteira_cobranca'] = $numero_variacao_carteira_cobranca;

        return $this;
    }

    /**
     * Gets quantidade_dia_protesto
     *
     * @return float
     */
    public function getQuantidadeDiaProtesto()
    {
        return $this->container['quantidade_dia_protesto'];
    }

    /**
     * Sets quantidade_dia_protesto
     *
     * @param float $quantidade_dia_protesto Número de dias decorrentes após a data de vencimento para inicialização do processo de cobrança via protesto.
     *
     * @return $this
     */
    public function setQuantidadeDiaProtesto($quantidade_dia_protesto)
    {
        $this->container['quantidade_dia_protesto'] = $quantidade_dia_protesto;

        return $this;
    }

    /**
     * Gets quantidade_dia_prazo_limite_recebimento
     *
     * @return float
     */
    public function getQuantidadeDiaPrazoLimiteRecebimento()
    {
        return $this->container['quantidade_dia_prazo_limite_recebimento'];
    }

    /**
     * Sets quantidade_dia_prazo_limite_recebimento
     *
     * @param float $quantidade_dia_prazo_limite_recebimento Número de dias corridos para recebimento do boleto após a data de vencimento.
     *
     * @return $this
     */
    public function setQuantidadeDiaPrazoLimiteRecebimento($quantidade_dia_prazo_limite_recebimento)
    {
        $this->container['quantidade_dia_prazo_limite_recebimento'] = $quantidade_dia_prazo_limite_recebimento;

        return $this;
    }

    /**
     * Gets data_limite_recebimento_titulo
     *
     * @return string
     */
    public function getDataLimiteRecebimentoTitulo()
    {
        return $this->container['data_limite_recebimento_titulo'];
    }

    /**
     * Sets data_limite_recebimento_titulo
     *
     * @param string $data_limite_recebimento_titulo Data limite para recebimento do boleto após a data de vencimento.
     *
     * @return $this
     */
    public function setDataLimiteRecebimentoTitulo($data_limite_recebimento_titulo)
    {
        $this->container['data_limite_recebimento_titulo'] = $data_limite_recebimento_titulo;

        return $this;
    }

    /**
     * Gets indicador_permissao_recebimento_parcial
     *
     * @return string
     */
    public function getIndicadorPermissaoRecebimentoParcial()
    {
        return $this->container['indicador_permissao_recebimento_parcial'];
    }

    /**
     * Sets indicador_permissao_recebimento_parcial
     *
     * @param string $indicador_permissao_recebimento_parcial Código para identificação da autorização de pagamento parcial do boleto.  Domínios:  S - SIM  N - NAO
     *
     * @return $this
     */
    public function setIndicadorPermissaoRecebimentoParcial($indicador_permissao_recebimento_parcial)
    {
        $this->container['indicador_permissao_recebimento_parcial'] = $indicador_permissao_recebimento_parcial;

        return $this;
    }

    /**
     * Gets texto_codigo_barras_titulo_cobranca
     *
     * @return string
     */
    public function getTextoCodigoBarrasTituloCobranca()
    {
        return $this->container['texto_codigo_barras_titulo_cobranca'];
    }

    /**
     * Sets texto_codigo_barras_titulo_cobranca
     *
     * @param string $texto_codigo_barras_titulo_cobranca Código de barras do boleto.
     *
     * @return $this
     */
    public function setTextoCodigoBarrasTituloCobranca($texto_codigo_barras_titulo_cobranca)
    {
        $this->container['texto_codigo_barras_titulo_cobranca'] = $texto_codigo_barras_titulo_cobranca;

        return $this;
    }

    /**
     * Gets codigo_ocorrencia_cartorio
     *
     * @return float
     */
    public function getCodigoOcorrenciaCartorio()
    {
        return $this->container['codigo_ocorrencia_cartorio'];
    }

    /**
     * Sets codigo_ocorrencia_cartorio
     *
     * @param float $codigo_ocorrencia_cartorio Código para identificação das ocorrências de retorno do cartório.  Domínios:  0 - TITULO PROTOCOLADO - ANTIGO \"TEC\"  1 - TITULO PAGO EM CARTORIO  2 - TITULO PROTESTADO - ANTIGO \"DDP\"  3 - TITULO RETIRADO CARTORIO - ANT. DDS  4 - TITULO SUSTADO JUDICIALMENTE  5 - TITULO RECUSADO SEM CUSTAS  6 - TITULO RECUSADO COM CUSTAS  7 - TITULO PAGO LIQUIDACAO CONDICIONAL  8 - TITULO ACEITO  9 - CUSTAS DE EDITAL  20 - LQ. CARTORIO AG. SEMI-AUTOM.  21 - CHQ DEVOLV. TIT. ENC. PROT.  22 - TITULO SUSTADO DEFINITIVO  23 - RETIRADA APÓS SUSTAÇÃO JUDICIAL  59 - PAGTO CONDICIONAL VIA SELTEC  60 - TITULO PAGO EM CARTORIO-SELTEC
     *
     * @return $this
     */
    public function setCodigoOcorrenciaCartorio($codigo_ocorrencia_cartorio)
    {
        $this->container['codigo_ocorrencia_cartorio'] = $codigo_ocorrencia_cartorio;

        return $this;
    }

    /**
     * Gets valor_imposto_sobre_opr_financeiras_recebido_titulo
     *
     * @return float
     */
    public function getValorImpostoSobreOprFinanceirasRecebidoTitulo()
    {
        return $this->container['valor_imposto_sobre_opr_financeiras_recebido_titulo'];
    }

    /**
     * Sets valor_imposto_sobre_opr_financeiras_recebido_titulo
     *
     * @param float $valor_imposto_sobre_opr_financeiras_recebido_titulo Valor do IOF recebido.
     *
     * @return $this
     */
    public function setValorImpostoSobreOprFinanceirasRecebidoTitulo($valor_imposto_sobre_opr_financeiras_recebido_titulo)
    {
        $this->container['valor_imposto_sobre_opr_financeiras_recebido_titulo'] = $valor_imposto_sobre_opr_financeiras_recebido_titulo;

        return $this;
    }

    /**
     * Gets valor_abatimento_total
     *
     * @return float
     */
    public function getValorAbatimentoTotal()
    {
        return $this->container['valor_abatimento_total'];
    }

    /**
     * Sets valor_abatimento_total
     *
     * @param float $valor_abatimento_total Valor do abatimento concedido.
     *
     * @return $this
     */
    public function setValorAbatimentoTotal($valor_abatimento_total)
    {
        $this->container['valor_abatimento_total'] = $valor_abatimento_total;

        return $this;
    }

    /**
     * Gets valor_juro_mora_recebido
     *
     * @return float
     */
    public function getValorJuroMoraRecebido()
    {
        return $this->container['valor_juro_mora_recebido'];
    }

    /**
     * Sets valor_juro_mora_recebido
     *
     * @param float $valor_juro_mora_recebido Valor dos juros recebidos.
     *
     * @return $this
     */
    public function setValorJuroMoraRecebido($valor_juro_mora_recebido)
    {
        $this->container['valor_juro_mora_recebido'] = $valor_juro_mora_recebido;

        return $this;
    }

    /**
     * Gets valor_desconto_utilizado
     *
     * @return float
     */
    public function getValorDescontoUtilizado()
    {
        return $this->container['valor_desconto_utilizado'];
    }

    /**
     * Sets valor_desconto_utilizado
     *
     * @param float $valor_desconto_utilizado Valor de desconto utilizado pelo pagador.
     *
     * @return $this
     */
    public function setValorDescontoUtilizado($valor_desconto_utilizado)
    {
        $this->container['valor_desconto_utilizado'] = $valor_desconto_utilizado;

        return $this;
    }

    /**
     * Gets valor_pago_sacado
     *
     * @return float
     */
    public function getValorPagoSacado()
    {
        return $this->container['valor_pago_sacado'];
    }

    /**
     * Sets valor_pago_sacado
     *
     * @param float $valor_pago_sacado Valor pago.
     *
     * @return $this
     */
    public function setValorPagoSacado($valor_pago_sacado)
    {
        $this->container['valor_pago_sacado'] = $valor_pago_sacado;

        return $this;
    }

    /**
     * Gets valor_credito_cedente
     *
     * @return float
     */
    public function getValorCreditoCedente()
    {
        return $this->container['valor_credito_cedente'];
    }

    /**
     * Sets valor_credito_cedente
     *
     * @param float $valor_credito_cedente Valor líquido creditado ao beneficiário.
     *
     * @return $this
     */
    public function setValorCreditoCedente($valor_credito_cedente)
    {
        $this->container['valor_credito_cedente'] = $valor_credito_cedente;

        return $this;
    }

    /**
     * Gets codigo_tipo_liquidacao
     *
     * @return float
     */
    public function getCodigoTipoLiquidacao()
    {
        return $this->container['codigo_tipo_liquidacao'];
    }

    /**
     * Sets codigo_tipo_liquidacao
     *
     * @param float $codigo_tipo_liquidacao Código para identificação do tipo de liquidação.  Domínios:  1 CAIXA 2 VIA COMPE 3 EM CARTORIO 4 PIX 5 TITULO EM LIQUIDACAO - ORIGEM AGE 6 TITULO EM LIQUIDACAO - PGT 7 BANCO POSTAL 8 TITULO LIQUIDADO VIA COMPE/STR
     *
     * @return $this
     */
    public function setCodigoTipoLiquidacao($codigo_tipo_liquidacao)
    {
        $this->container['codigo_tipo_liquidacao'] = $codigo_tipo_liquidacao;

        return $this;
    }

    /**
     * Gets data_credito_liquidacao
     *
     * @return string
     */
    public function getDataCreditoLiquidacao()
    {
        return $this->container['data_credito_liquidacao'];
    }

    /**
     * Sets data_credito_liquidacao
     *
     * @param string $data_credito_liquidacao Data a qual será creditado o valor inerente ao título (este campo só será preenchido após a liquidação, ou seja, após codigoEstadoTituloCobranca = 6).
     *
     * @return $this
     */
    public function setDataCreditoLiquidacao($data_credito_liquidacao)
    {
        $this->container['data_credito_liquidacao'] = $data_credito_liquidacao;

        return $this;
    }

    /**
     * Gets data_recebimento_titulo
     *
     * @return string
     */
    public function getDataRecebimentoTitulo()
    {
        return $this->container['data_recebimento_titulo'];
    }

    /**
     * Sets data_recebimento_titulo
     *
     * @param string $data_recebimento_titulo Data para a qual foi agendado o recebimento/pagamento do título.
     *
     * @return $this
     */
    public function setDataRecebimentoTitulo($data_recebimento_titulo)
    {
        $this->container['data_recebimento_titulo'] = $data_recebimento_titulo;

        return $this;
    }

    /**
     * Gets codigo_prefixo_dependencia_recebedor
     *
     * @return float
     */
    public function getCodigoPrefixoDependenciaRecebedor()
    {
        return $this->container['codigo_prefixo_dependencia_recebedor'];
    }

    /**
     * Sets codigo_prefixo_dependencia_recebedor
     *
     * @param float $codigo_prefixo_dependencia_recebedor Código agência da praça do recebimento do boleto.
     *
     * @return $this
     */
    public function setCodigoPrefixoDependenciaRecebedor($codigo_prefixo_dependencia_recebedor)
    {
        $this->container['codigo_prefixo_dependencia_recebedor'] = $codigo_prefixo_dependencia_recebedor;

        return $this;
    }

    /**
     * Gets codigo_natureza_recebimento
     *
     * @return float
     */
    public function getCodigoNaturezaRecebimento()
    {
        return $this->container['codigo_natureza_recebimento'];
    }

    /**
     * Sets codigo_natureza_recebimento
     *
     * @param float $codigo_natureza_recebimento Código para identificar as ocorrências (rejeições, tarifas, custas, liquidação e baixas) do boleto.  Domínios:  1 - NORMAL 2 - POR CONTA 3 - POR SALDO 4 - CHEQUE A COMPENSAR 7 - LIQUIDADO NA APRESENTACAO 8 - POR CONTA EM CARTORIO 9 - EM CARTORIO
     *
     * @return $this
     */
    public function setCodigoNaturezaRecebimento($codigo_natureza_recebimento)
    {
        $this->container['codigo_natureza_recebimento'] = $codigo_natureza_recebimento;

        return $this;
    }

    /**
     * Gets numero_identidade_sacado_titulo_cobranca
     *
     * @return string
     */
    public function getNumeroIdentidadeSacadoTituloCobranca()
    {
        return $this->container['numero_identidade_sacado_titulo_cobranca'];
    }

    /**
     * Sets numero_identidade_sacado_titulo_cobranca
     *
     * @param string $numero_identidade_sacado_titulo_cobranca Número de identidade do sacado do título.
     *
     * @return $this
     */
    public function setNumeroIdentidadeSacadoTituloCobranca($numero_identidade_sacado_titulo_cobranca)
    {
        $this->container['numero_identidade_sacado_titulo_cobranca'] = $numero_identidade_sacado_titulo_cobranca;

        return $this;
    }

    /**
     * Gets codigo_responsavel_atualizacao
     *
     * @return string
     */
    public function getCodigoResponsavelAtualizacao()
    {
        return $this->container['codigo_responsavel_atualizacao'];
    }

    /**
     * Sets codigo_responsavel_atualizacao
     *
     * @param string $codigo_responsavel_atualizacao Código para identificação do sistema/usuário responsável pela atualização do boleto.
     *
     * @return $this
     */
    public function setCodigoResponsavelAtualizacao($codigo_responsavel_atualizacao)
    {
        $this->container['codigo_responsavel_atualizacao'] = $codigo_responsavel_atualizacao;

        return $this;
    }

    /**
     * Gets codigo_tipo_baixa_titulo
     *
     * @return float
     */
    public function getCodigoTipoBaixaTitulo()
    {
        return $this->container['codigo_tipo_baixa_titulo'];
    }

    /**
     * Sets codigo_tipo_baixa_titulo
     *
     * @param float $codigo_tipo_baixa_titulo Código para identificação do tipo de baixa do boleto.  Domínios:  1 - BAIXADO POR SOLICITACAO 2 - ENTREGA FRANCO PAGAMENTO 9 - COMANDADA BANCO 10 - COMANDADA CLIENTE - ARQUIVO 11 - COMANDADA CLIENTE - ON-LINE 12 - DECURSO PRAZO - CLIENTE 13 - DECURSO PRAZO - BANCO 15 - PROTESTADO 31 - LIQUIDADO ANTERIORMENTE 32 - HABILITADO EM PROCESSO 35 - TRANSFERIDO PARA PERDAS 51 - REGISTRADO INDEVIDAMENTE 90 - BAIXA AUTOMATICA
     *
     * @return $this
     */
    public function setCodigoTipoBaixaTitulo($codigo_tipo_baixa_titulo)
    {
        $this->container['codigo_tipo_baixa_titulo'] = $codigo_tipo_baixa_titulo;

        return $this;
    }

    /**
     * Gets valor_multa_recebido
     *
     * @return float
     */
    public function getValorMultaRecebido()
    {
        return $this->container['valor_multa_recebido'];
    }

    /**
     * Sets valor_multa_recebido
     *
     * @param float $valor_multa_recebido Valor de multa recebido.
     *
     * @return $this
     */
    public function setValorMultaRecebido($valor_multa_recebido)
    {
        $this->container['valor_multa_recebido'] = $valor_multa_recebido;

        return $this;
    }

    /**
     * Gets valor_reajuste
     *
     * @return float
     */
    public function getValorReajuste()
    {
        return $this->container['valor_reajuste'];
    }

    /**
     * Sets valor_reajuste
     *
     * @param float $valor_reajuste Valor do reajuste (índice econômico).
     *
     * @return $this
     */
    public function setValorReajuste($valor_reajuste)
    {
        $this->container['valor_reajuste'] = $valor_reajuste;

        return $this;
    }

    /**
     * Gets valor_outro_recebido
     *
     * @return float
     */
    public function getValorOutroRecebido()
    {
        return $this->container['valor_outro_recebido'];
    }

    /**
     * Sets valor_outro_recebido
     *
     * @param float $valor_outro_recebido Outros valores recebidos.
     *
     * @return $this
     */
    public function setValorOutroRecebido($valor_outro_recebido)
    {
        $this->container['valor_outro_recebido'] = $valor_outro_recebido;

        return $this;
    }

    /**
     * Gets codigo_indicador_economico_utilizado_inadimplencia
     *
     * @return float
     */
    public function getCodigoIndicadorEconomicoUtilizadoInadimplencia()
    {
        return $this->container['codigo_indicador_economico_utilizado_inadimplencia'];
    }

    /**
     * Sets codigo_indicador_economico_utilizado_inadimplencia
     *
     * @param float $codigo_indicador_economico_utilizado_inadimplencia Código do índice econômico utilizado para o cálculo de juros/multa.
     *
     * @return $this
     */
    public function setCodigoIndicadorEconomicoUtilizadoInadimplencia($codigo_indicador_economico_utilizado_inadimplencia)
    {
        $this->container['codigo_indicador_economico_utilizado_inadimplencia'] = $codigo_indicador_economico_utilizado_inadimplencia;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
